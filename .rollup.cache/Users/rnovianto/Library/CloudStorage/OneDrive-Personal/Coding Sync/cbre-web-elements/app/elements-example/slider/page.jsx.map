{"version":3,"file":"page.jsx","sourceRoot":"","sources":["page.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport Link from \"next/link\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport * as z from \"zod\";\n\nimport { CBREButton } from \"@/components/cbre-button\";\nimport { Slider } from \"@/components/ui/slider\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\n\n// Form schema for the price range example\nconst priceRangeSchema = z.object({\n  priceRange: z.array(z.number()).refine(\n    (value) => value.length === 2 && value[0] <= value[1],\n    {\n      message: \"Min price must be less than or equal to max price\",\n    }\n  ),\n});\n\nexport default function SliderExamplePage() {\n  // Basic slider state\n  const [basicValue, setBasicValue] = React.useState(50);\n  \n  // Range slider state\n  const [rangeValue, setRangeValue] = React.useState([25, 75]);\n  \n  // Progress slider state with calculated percentage\n  const [progressValue, setProgressValue] = React.useState(30);\n  const progressPercentage = Math.round(progressValue);\n  \n  // Step slider state\n  const [stepValue, setStepValue] = React.useState(50);\n  \n  // Form with range slider\n  const form = useForm<z.infer<typeof priceRangeSchema>>({\n    resolver: zodResolver(priceRangeSchema),\n    defaultValues: {\n      priceRange: [200000, 600000],\n    },\n  });\n  \n  // Format price as currency\n  const formatPrice = (value: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      maximumFractionDigits: 0,\n    }).format(value);\n  };\n  \n  // Handle form submission\n  const onSubmit = (data: z.infer<typeof priceRangeSchema>) => {\n    alert(`Price Range Selected: ${formatPrice(data.priceRange[0])} - ${formatPrice(data.priceRange[1])}`);\n  };\n  \n  return (\n    <div className=\"min-h-screen bg-white\">\n      <div className=\"py-10 px-4 md:px-10 max-w-5xl mx-auto\">\n        <div className=\"mb-8\">\n          <Link href=\"/elements-example\">\n            <CBREButton variant=\"outline\">Back to UI Elements</CBREButton>\n          </Link>\n        </div>\n\n        <h1 className=\"text-6xl font-financier text-cbre-green mb-6\">Slider Component</h1>\n        <p className=\"text-dark-grey font-calibre mb-10 max-w-3xl\">\n          The Slider component provides a way to select a value or range of values along a specified number range.\n          It follows shadcn/ui patterns for clean integration with forms and state management.\n        </p>\n        \n        {/* Basic Slider Example */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-4xl font-financier text-cbre-green mb-5\">Basic Slider</h2>\n          <div className=\"bg-[var(--lighter-grey)] p-4 md:p-8\">\n            <div className=\"border border-light-grey bg-white p-8 max-w-2xl mx-auto\">\n              <div className=\"space-y-6\">\n                <div>\n                  <h3 className=\"text-lg font-calibre mb-3\">Value: {basicValue}</h3>\n                  <Slider \n                    defaultValue={[basicValue]} \n                    max={100} \n                    step={1} \n                    onValueChange={(value) => setBasicValue(value[0])}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white p-6 border border-light-grey mt-6\">\n            <h3 className=\"text-lg font-calibre font-medium text-dark-grey mb-3\">Implementation</h3>\n            <pre className=\"bg-gray-100 p-4 rounded overflow-x-auto text-sm\">\n{`import { Slider } from \"@/components/ui/slider\";\n\nconst [value, setValue] = React.useState(50);\n\n<Slider \n  defaultValue={[value]} \n  max={100} \n  step={1} \n  onValueChange={(value) => setValue(value[0])}\n/>`}\n            </pre>\n          </div>\n        </div>\n        \n        {/* Range Slider */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-4xl font-financier text-cbre-green mb-5\">Range Slider</h2>\n          <div className=\"bg-[var(--lighter-grey)] p-4 md:p-8\">\n            <div className=\"border border-light-grey bg-white p-8 max-w-2xl mx-auto\">\n              <div className=\"space-y-6\">\n                <div>\n                  <h3 className=\"text-lg font-calibre mb-3\">Range: {rangeValue[0]} - {rangeValue[1]}</h3>\n                  <Slider \n                    defaultValue={rangeValue} \n                    max={100} \n                    step={1} \n                    onValueChange={setRangeValue}\n                    className=\"my-6\"\n                  />\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm text-dark-grey\">0</span>\n                    <span className=\"text-sm text-dark-grey\">100</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white p-6 border border-light-grey mt-6\">\n            <h3 className=\"text-lg font-calibre font-medium text-dark-grey mb-3\">Implementation</h3>\n            <pre className=\"bg-gray-100 p-4 rounded overflow-x-auto text-sm\">\n{`import { Slider } from \"@/components/ui/slider\";\n\nconst [rangeValue, setRangeValue] = React.useState([25, 75]);\n\n<Slider \n  defaultValue={rangeValue} \n  max={100} \n  step={1} \n  onValueChange={setRangeValue}\n/>\n\n<div className=\"flex justify-between\">\n  <span className=\"text-sm\">0</span>\n  <span className=\"text-sm\">100</span>\n</div>`}\n            </pre>\n          </div>\n        </div>\n        \n        {/* Progress Indicator */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-4xl font-financier text-cbre-green mb-5\">Progress Indicator</h2>\n          <div className=\"bg-[var(--lighter-grey)] p-4 md:p-8\">\n            <div className=\"border border-light-grey bg-white p-8 max-w-2xl mx-auto\">\n              <div className=\"space-y-6\">\n                <div>\n                  <div className=\"flex justify-between items-center mb-3\">\n                    <h3 className=\"text-lg font-calibre\">Completion</h3>\n                    <span className=\"bg-cbre-green text-white px-2 py-1 text-sm\">{progressPercentage}%</span>\n                  </div>\n                  <Slider \n                    defaultValue={[progressValue]} \n                    max={100} \n                    step={1} \n                    onValueChange={(value) => setProgressValue(value[0])}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white p-6 border border-light-grey mt-6\">\n            <h3 className=\"text-lg font-calibre font-medium text-dark-grey mb-3\">Implementation</h3>\n            <pre className=\"bg-gray-100 p-4 rounded overflow-x-auto text-sm\">\n{`const [progressValue, setProgressValue] = React.useState(30);\nconst progressPercentage = Math.round(progressValue);\n\n<div className=\"flex justify-between items-center mb-3\">\n  <h3 className=\"text-lg\">Completion</h3>\n  <span className=\"bg-cbre-green text-white px-2 py-1 text-sm\">\n    {progressPercentage}%\n  </span>\n</div>\n\n<Slider \n  defaultValue={[progressValue]} \n  max={100} \n  step={1} \n  onValueChange={(value) => setProgressValue(value[0])}\n/>`}\n            </pre>\n          </div>\n        </div>\n        \n        {/* Step Slider */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-4xl font-financier text-cbre-green mb-5\">Step Slider</h2>\n          <div className=\"bg-[var(--lighter-grey)] p-4 md:p-8\">\n            <div className=\"border border-light-grey bg-white p-8 max-w-2xl mx-auto\">\n              <div className=\"space-y-6\">\n                <div>\n                  <h3 className=\"text-lg font-calibre mb-3\">Step Value: {stepValue}</h3>\n                  <Slider \n                    defaultValue={[stepValue]} \n                    max={100} \n                    step={10} \n                    onValueChange={(value) => setStepValue(value[0])}\n                    className=\"my-6\"\n                  />\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm text-dark-grey\">0</span>\n                    <span className=\"text-sm text-dark-grey\">10</span>\n                    <span className=\"text-sm text-dark-grey\">20</span>\n                    <span className=\"text-sm text-dark-grey\">30</span>\n                    <span className=\"text-sm text-dark-grey\">40</span>\n                    <span className=\"text-sm text-dark-grey\">50</span>\n                    <span className=\"text-sm text-dark-grey\">60</span>\n                    <span className=\"text-sm text-dark-grey\">70</span>\n                    <span className=\"text-sm text-dark-grey\">80</span>\n                    <span className=\"text-sm text-dark-grey\">90</span>\n                    <span className=\"text-sm text-dark-grey\">100</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white p-6 border border-light-grey mt-6\">\n            <h3 className=\"text-lg font-calibre font-medium text-dark-grey mb-3\">Implementation</h3>\n            <pre className=\"bg-gray-100 p-4 rounded overflow-x-auto text-sm\">\n{`const [stepValue, setStepValue] = React.useState(50);\n\n<Slider \n  defaultValue={[stepValue]} \n  max={100} \n  step={10} \n  onValueChange={(value) => setStepValue(value[0])}\n/>\n\n// Display step markers\n<div className=\"flex justify-between\">\n  <span className=\"text-sm\">0</span>\n  <span className=\"text-sm\">10</span>\n  {/* ... other step markers ... */}\n  <span className=\"text-sm\">100</span>\n</div>`}\n            </pre>\n          </div>\n        </div>\n        \n        {/* Form Integration */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-4xl font-financier text-cbre-green mb-5\">Form Integration</h2>\n          <div className=\"bg-[var(--lighter-grey)] p-4 md:p-8\">\n            <div className=\"border border-light-grey bg-white p-8 max-w-2xl mx-auto\">\n              <div className=\"space-y-6\">\n                <Form {...form}>\n                  <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                    <FormField\n                      control={form.control}\n                      name=\"priceRange\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Price Range</FormLabel>\n                          <FormControl>\n                            <div className=\"space-y-4\">\n                              <Slider\n                                defaultValue={field.value}\n                                min={100000}\n                                max={1000000}\n                                step={10000}\n                                onValueChange={field.onChange}\n                              />\n                              <div className=\"flex justify-between items-center\">\n                                <div>\n                                  <span className=\"text-sm text-dark-grey\">Min:</span>\n                                  <span className=\"ml-1 font-medium\">{formatPrice(field.value[0])}</span>\n                                </div>\n                                <div>\n                                  <span className=\"text-sm text-dark-grey\">Max:</span>\n                                  <span className=\"ml-1 font-medium\">{formatPrice(field.value[1])}</span>\n                                </div>\n                              </div>\n                            </div>\n                          </FormControl>\n                          <FormDescription>\n                            Select your minimum and maximum price range.\n                          </FormDescription>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    \n                    <div className=\"flex justify-end\">\n                      <CBREButton type=\"submit\" variant=\"primary\">\n                        Save Price Range\n                      </CBREButton>\n                    </div>\n                  </form>\n                </Form>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white p-6 border border-light-grey mt-6\">\n            <h3 className=\"text-lg font-calibre font-medium text-dark-grey mb-3\">Implementation</h3>\n            <pre className=\"bg-gray-100 p-4 rounded overflow-x-auto text-sm\">\n{`import * as z from \"zod\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\n\n// Form schema\nconst priceRangeSchema = z.object({\n  priceRange: z.array(z.number()).refine(\n    (value) => value.length === 2 && value[0] <= value[1],\n    {\n      message: \"Min price must be less than or equal to max price\",\n    }\n  ),\n});\n\n// Format price as currency\nconst formatPrice = (value) => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    maximumFractionDigits: 0,\n  }).format(value);\n};\n\n// Initialize form\nconst form = useForm<z.infer<typeof priceRangeSchema>>({\n  resolver: zodResolver(priceRangeSchema),\n  defaultValues: {\n    priceRange: [200000, 600000],\n  },\n});\n\n// Form with react-hook-form\n<Form {...form}>\n  <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n    <FormField\n      control={form.control}\n      name=\"priceRange\"\n      render={({ field }) => (\n        <FormItem>\n          <FormLabel>Price Range</FormLabel>\n          <FormControl>\n            <div className=\"space-y-4\">\n              <Slider\n                defaultValue={field.value}\n                min={100000}\n                max={1000000}\n                step={10000}\n                onValueChange={field.onChange}\n              />\n              <div className=\"flex justify-between\">\n                <div>Min: {formatPrice(field.value[0])}</div>\n                <div>Max: {formatPrice(field.value[1])}</div>\n              </div>\n            </div>\n          </FormControl>\n          <FormDescription>\n            Select your price range.\n          </FormDescription>\n          <FormMessage />\n        </FormItem>\n      )}\n    />\n    \n    <Button type=\"submit\">Save</Button>\n  </form>\n</Form>`}\n            </pre>\n          </div>\n        </div>\n        \n                {/* Component API */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-4xl font-financier text-cbre-green mb-5\">Component API</h2>\n          <div className=\"bg-[var(--lighter-grey)] p-4 md:p-8\">\n            <div className=\"border border-light-grey bg-white p-8 max-w-2xl mx-auto\">\n              <div className=\"space-y-8\">\n                <div>\n                  <h3 className=\"text-xl font-calibre font-medium mb-3\">Slider Components</h3>\n                  <p className=\"mb-3 text-dark-grey font-calibre\">\n                    The Slider component provides a consistent UI element following CBRE design guidelines.\n                  </p>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full border-collapse text-sm\">\n                      <thead>\n                        <tr>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Component</th>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Description</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td className=\"border border-light-grey px-4 py-2 font-mono\">Slider</td>\n                          <td className=\"border border-light-grey px-4 py-2\">The root component.</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"text-xl font-calibre font-medium mb-3\">Slider Props</h3>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full border-collapse text-sm\">\n                      <thead>\n                        <tr>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Prop</th>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Type</th>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Description</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td className=\"border border-light-grey px-4 py-2 font-mono\">className</td>\n                          <td className=\"border border-light-grey px-4 py-2\">string</td>\n                          <td className=\"border border-light-grey px-4 py-2\">Additional CSS classes to apply to the component.</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n<div className=\"mt-16 flex justify-center\">\n          <Link href=\"/elements-example\">\n            <CBREButton variant=\"outline\">Back to UI Elements</CBREButton>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n} "]}