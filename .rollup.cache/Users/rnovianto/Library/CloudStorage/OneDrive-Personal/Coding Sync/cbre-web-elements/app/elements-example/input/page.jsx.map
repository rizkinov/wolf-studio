{"version":3,"file":"page.jsx","sourceRoot":"","sources":["page.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport Link from \"next/link\";\nimport { Label } from \"@/components/ui/label\";\nimport { Input } from \"@/components/ui/input\";\nimport { CBREButton } from \"@/components/cbre-button\";\nimport { CBREDatePicker } from \"@/components/cbre-date-picker\";\n\nexport default function InputExamplePage() {\n  // State for regular input\n  const [inputValue, setInputValue] = React.useState(\"\");\n  \n  // State for date picker\n  const [date, setDate] = React.useState<Date | undefined>(undefined);\n  \n  // State for form inputs\n  const [formState, setFormState] = React.useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  \n  // Handle input change\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n  \n  // Handle form change\n  const handleFormChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormState(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  \n  // Handle form clear\n  const handleClearForm = () => {\n    setFormState({\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\"\n    });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <div className=\"py-10 px-4 md:px-10 max-w-5xl mx-auto\">\n        <div className=\"mb-8\">\n          <Link href=\"/elements-example\">\n            <CBREButton variant=\"outline\">Back to UI Elements</CBREButton>\n          </Link>\n        </div>\n\n        <h1 className=\"text-6xl font-financier text-cbre-green mb-6\">Input Component</h1>\n        <p className=\"text-dark-grey font-calibre mb-10 max-w-3xl\">\n          The Input component provides a way to get user input in a form field. It follows the shadcn/ui composition pattern for clean integration.\n        </p>\n        \n        {/* Basic Input Example */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-4xl font-financier text-cbre-green mb-5\">Basic Input</h2>\n          <div className=\"bg-[var(--lighter-grey)] p-4 md:p-8\">\n            <div className=\"border border-light-grey bg-white p-8 max-w-2xl mx-auto\">\n              <Input \n                type=\"text\" \n                placeholder=\"Enter some text\"\n                value={inputValue}\n                onChange={handleInputChange}\n              />\n              <p className=\"mt-4 text-sm text-dark-grey\">\n                Current value: <span className=\"font-bold\">{inputValue || \"(empty)\"}</span>\n              </p>\n            </div>\n          </div>\n          \n          <div className=\"bg-white p-6 border border-light-grey mt-6\">\n            <h3 className=\"text-lg font-calibre font-medium text-dark-grey mb-3\">Implementation</h3>\n            <pre className=\"bg-gray-100 p-4 rounded overflow-x-auto text-sm\">\n{`import { Input } from \"@/components/ui/input\";\n\nconst [inputValue, setInputValue] = React.useState(\"\");\n\nconst handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n  setInputValue(e.target.value);\n};\n\n<Input \n  type=\"text\" \n  placeholder=\"Enter some text\"\n  value={inputValue}\n  onChange={handleInputChange}\n/>\n`}\n            </pre>\n          </div>\n        </div>\n        \n        {/* Input with Label */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-4xl font-financier text-cbre-green mb-5\">Input with Label</h2>\n          <div className=\"bg-[var(--lighter-grey)] p-4 md:p-8\">\n            <div className=\"border border-light-grey bg-white p-8 max-w-2xl mx-auto\">\n              <div className=\"grid w-full gap-1.5\">\n                <Label htmlFor=\"email\">Email</Label>\n                <Input \n                  type=\"email\" \n                  id=\"email\" \n                  placeholder=\"name@example.com\" \n                />\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white p-6 border border-light-grey mt-6\">\n            <h3 className=\"text-lg font-calibre font-medium text-dark-grey mb-3\">Implementation</h3>\n            <pre className=\"bg-gray-100 p-4 rounded overflow-x-auto text-sm\">\n{`import { Label } from \"@/components/ui/label\";\nimport { Input } from \"@/components/ui/input\";\n\n<div className=\"grid w-full gap-1.5\">\n  <Label htmlFor=\"email\">Email</Label>\n  <Input \n    type=\"email\" \n    id=\"email\" \n    placeholder=\"name@example.com\" \n  />\n</div>\n`}\n            </pre>\n          </div>\n        </div>\n        \n        {/* Disabled Input */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-4xl font-financier text-cbre-green mb-5\">Disabled Input</h2>\n          <div className=\"bg-[var(--lighter-grey)] p-4 md:p-8\">\n            <div className=\"border border-light-grey bg-white p-8 max-w-2xl mx-auto\">\n              <div className=\"grid w-full gap-1.5\">\n                <Label \n                  htmlFor=\"disabled-input\" \n                  className=\"text-dark-grey opacity-50\"\n                >\n                  Disabled Input\n                </Label>\n                <Input \n                  type=\"text\" \n                  id=\"disabled-input\" \n                  value=\"This input cannot be edited\"\n                  disabled \n                />\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white p-6 border border-light-grey mt-6\">\n            <h3 className=\"text-lg font-calibre font-medium text-dark-grey mb-3\">Implementation</h3>\n            <pre className=\"bg-gray-100 p-4 rounded overflow-x-auto text-sm\">\n{`<div className=\"grid w-full gap-1.5\">\n  <Label \n    htmlFor=\"disabled-input\" \n    className=\"text-dark-grey opacity-50\"\n  >\n    Disabled Input\n  </Label>\n  <Input \n    type=\"text\" \n    id=\"disabled-input\" \n    value=\"This input cannot be edited\"\n    disabled \n  />\n</div>\n`}\n            </pre>\n          </div>\n        </div>\n        \n        {/* Different Input Types */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-4xl font-financier text-cbre-green mb-5\">Input Types</h2>\n          <div className=\"bg-[var(--lighter-grey)] p-4 md:p-8\">\n            <div className=\"border border-light-grey bg-white p-8 max-w-2xl mx-auto\">\n              <div className=\"space-y-4\">\n                <div className=\"grid w-full gap-1.5\">\n                  <Label htmlFor=\"text-input\">Text Input</Label>\n                  <Input \n                    type=\"text\" \n                    id=\"text-input\" \n                    placeholder=\"Regular text\" \n                  />\n                </div>\n                \n                <div className=\"grid w-full gap-1.5\">\n                  <Label htmlFor=\"password-input\">Password Input</Label>\n                  <Input \n                    type=\"password\" \n                    id=\"password-input\" \n                    placeholder=\"Password\" \n                  />\n                </div>\n                \n                <div className=\"grid w-full gap-1.5\">\n                  <Label htmlFor=\"number-input\">Number Input</Label>\n                  <Input \n                    type=\"number\" \n                    id=\"number-input\" \n                    placeholder=\"123\" \n                  />\n                </div>\n                \n                <div className=\"grid w-full gap-1.5\">\n                  <Label htmlFor=\"date-input\">Date Input</Label>\n                  <CBREDatePicker\n                    date={date}\n                    setDate={setDate}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white p-6 border border-light-grey mt-6\">\n            <h3 className=\"text-lg font-calibre font-medium text-dark-grey mb-3\">Implementation</h3>\n            <pre className=\"bg-gray-100 p-4 rounded overflow-x-auto text-sm\">\n{`import { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { CBREDatePicker } from \"@/components/cbre-date-picker\";\nimport { useState } from \"react\";\n\n// For date picker\nconst [date, setDate] = useState<Date | undefined>(undefined);\n\n<div className=\"grid w-full gap-1.5\">\n  <Label htmlFor=\"text-input\">Text Input</Label>\n  <Input \n    type=\"text\" \n    id=\"text-input\" \n    placeholder=\"Regular text\" \n  />\n</div>\n\n<div className=\"grid w-full gap-1.5\">\n  <Label htmlFor=\"password-input\">Password Input</Label>\n  <Input \n    type=\"password\" \n    id=\"password-input\" \n    placeholder=\"Password\" \n  />\n</div>\n\n<div className=\"grid w-full gap-1.5\">\n  <Label htmlFor=\"number-input\">Number Input</Label>\n  <Input \n    type=\"number\" \n    id=\"number-input\" \n    placeholder=\"123\" \n  />\n</div>\n\n<div className=\"grid w-full gap-1.5\">\n  <Label htmlFor=\"date-input\">Date Input</Label>\n  <CBREDatePicker\n    date={date}\n    setDate={setDate}\n  />\n</div>\n`}\n            </pre>\n          </div>\n        </div>\n        \n        {/* Form with Inputs */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-4xl font-financier text-cbre-green mb-5\">Form with Inputs</h2>\n          <div className=\"bg-[var(--lighter-grey)] p-4 md:p-8\">\n            <div className=\"border border-light-grey bg-white p-8 max-w-2xl mx-auto\">\n              <form className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div className=\"grid w-full gap-1.5\">\n                    <Label htmlFor=\"firstName\">First Name</Label>\n                    <Input \n                      type=\"text\" \n                      id=\"firstName\" \n                      name=\"firstName\"\n                      placeholder=\"John\" \n                      value={formState.firstName}\n                      onChange={handleFormChange}\n                    />\n                  </div>\n                  \n                  <div className=\"grid w-full gap-1.5\">\n                    <Label htmlFor=\"lastName\">Last Name</Label>\n                    <Input \n                      type=\"text\" \n                      id=\"lastName\" \n                      name=\"lastName\"\n                      placeholder=\"Doe\" \n                      value={formState.lastName}\n                      onChange={handleFormChange}\n                    />\n                  </div>\n                </div>\n                \n                <div className=\"grid w-full gap-1.5\">\n                  <Label htmlFor=\"formEmail\">Email</Label>\n                  <Input \n                    type=\"email\" \n                    id=\"formEmail\" \n                    name=\"email\"\n                    placeholder=\"john.doe@example.com\" \n                    value={formState.email}\n                    onChange={handleFormChange}\n                  />\n                </div>\n                \n                <div className=\"grid w-full gap-1.5\">\n                  <Label htmlFor=\"formPassword\">Password</Label>\n                  <Input \n                    type=\"password\" \n                    id=\"formPassword\" \n                    name=\"password\"\n                    placeholder=\"Enter your password\" \n                    value={formState.password}\n                    onChange={handleFormChange}\n                  />\n                </div>\n                \n                <div className=\"flex gap-4 justify-end\">\n                  <CBREButton\n                    variant=\"outline\"\n                    type=\"button\"\n                    onClick={handleClearForm}\n                  >\n                    Clear Form\n                  </CBREButton>\n                  \n                  <CBREButton\n                    variant=\"primary\"\n                    type=\"button\"\n                    disabled={\n                      !formState.firstName || \n                      !formState.lastName || \n                      !formState.email || \n                      !formState.password\n                    }\n                  >\n                    Submit\n                  </CBREButton>\n                </div>\n              </form>\n            </div>\n          </div>\n          \n          <div className=\"bg-white p-6 border border-light-grey mt-6\">\n            <h3 className=\"text-lg font-calibre font-medium text-dark-grey mb-3\">Implementation</h3>\n            <pre className=\"bg-gray-100 p-4 rounded overflow-x-auto text-sm\">\n{`const [formState, setFormState] = React.useState({\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\"\n});\n\nconst handleFormChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n  const { name, value } = e.target;\n  setFormState(prev => ({\n    ...prev,\n    [name]: value\n  }));\n};\n\nconst handleClearForm = () => {\n  setFormState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\"\n  });\n};\n\n<form className=\"space-y-6\">\n  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n    <div className=\"grid w-full gap-1.5\">\n      <Label htmlFor=\"firstName\">First Name</Label>\n      <Input \n        type=\"text\" \n        id=\"firstName\" \n        name=\"firstName\"\n        placeholder=\"John\" \n        value={formState.firstName}\n        onChange={handleFormChange}\n      />\n    </div>\n    \n    {/* Additional form fields */}\n  </div>\n  \n  <div className=\"flex gap-4 justify-end\">\n    <CBREButton\n      variant=\"outline\"\n      type=\"button\"\n      onClick={handleClearForm}\n    >\n      Clear Form\n    </CBREButton>\n    \n    <CBREButton\n      variant=\"primary\"\n      type=\"button\"\n      disabled={!formState.firstName || /* other validations */}\n    >\n      Submit\n    </CBREButton>\n  </div>\n</form>\n`}\n            </pre>\n          </div>\n        </div>\n        \n                {/* Component API */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-4xl font-financier text-cbre-green mb-5\">Component API</h2>\n          <div className=\"bg-[var(--lighter-grey)] p-4 md:p-8\">\n            <div className=\"border border-light-grey bg-white p-8 max-w-2xl mx-auto\">\n              <div className=\"space-y-8\">\n                <div>\n                  <h3 className=\"text-xl font-calibre font-medium mb-3\">Input Components</h3>\n                  <p className=\"mb-3 text-dark-grey font-calibre\">\n                    The Input component provides a consistent UI element following CBRE design guidelines.\n                  </p>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full border-collapse text-sm\">\n                      <thead>\n                        <tr>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Component</th>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Description</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td className=\"border border-light-grey px-4 py-2 font-mono\">Input</td>\n                          <td className=\"border border-light-grey px-4 py-2\">The root component.</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"text-xl font-calibre font-medium mb-3\">Input Props</h3>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full border-collapse text-sm\">\n                      <thead>\n                        <tr>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Prop</th>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Type</th>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Description</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td className=\"border border-light-grey px-4 py-2 font-mono\">className</td>\n                          <td className=\"border border-light-grey px-4 py-2\">string</td>\n                          <td className=\"border border-light-grey px-4 py-2\">Additional CSS classes to apply to the component.</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n<div className=\"mt-16 flex justify-center\">\n          <Link href=\"/elements-example\">\n            <CBREButton variant=\"outline\">Back to UI Elements</CBREButton>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n} "]}