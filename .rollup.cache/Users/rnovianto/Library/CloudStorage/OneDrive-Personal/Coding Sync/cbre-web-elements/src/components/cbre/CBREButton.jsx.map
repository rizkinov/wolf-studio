{"version":3,"file":"CBREButton.jsx","sourceRoot":"","sources":["CBREButton.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAC;AAChD,OAAO,EAAE,EAAE,EAAE,MAAM,aAAa,CAAC;AAUjC;;;;;GAKG;AACH,MAAM,UAAU,UAAU,CAAC,EAMT;QANS,EACzB,SAAS,EACT,OAAO,GAAG,SAAS,EACnB,QAAQ,EACR,OAAO,OAES,EADb,KAAK,cALiB,+CAM1B,CADS;IAER,2EAA2E;IAC3E,IAAI,OAAO,KAAK,MAAM,EAAE,CAAC;QACvB,OAAO,CACL,CAAC,IAAI,CACH,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,SAAS,CAAC,CAAC,EAAE,CACX,wJAAwJ,EACxJ,SAAS,CACV,CAAC,CACF,IAAI,KAAK,CAAC,CAEV;QAAA,CAAC,QAAQ,CACX;MAAA,EAAE,IAAI,CAAC,CACR,CAAC;IACJ,CAAC;IAED,4EAA4E;IAC5E,MAAM,eAAe,GAAG,GAAG,EAAE;QAC3B,QAAQ,OAAO,EAAE,CAAC;YAChB,KAAK,SAAS;gBACZ,OAAO,EAAE,CAAC,4GAA4G,EAAE,SAAS,CAAC,CAAC;YACrI,KAAK,SAAS;gBACZ,OAAO,EAAE,CACP,0CAA0C,EAC1C,0DAA0D,EAC1D,gCAAgC,EAChC,SAAS,CACV,CAAC;YACJ,KAAK,QAAQ;gBACX,OAAO,EAAE,CAAC,4GAA4G,EAAE,SAAS,CAAC,CAAC;YACrI,KAAK,QAAQ;gBACX,OAAO,EAAE,CAAC,8HAA8H,EAAE,SAAS,CAAC,CAAC;YACvJ,KAAK,WAAW;gBACd,sFAAsF;gBACtF,OAAO,EAAE,CAAC,qIAAqI,EAAE,SAAS,CAAC,CAAC;YAC9J;gBACE,OAAO,SAAS,CAAC;QACrB,CAAC;IACH,CAAC,CAAC;IAEF,4BAA4B;IAC5B,MAAM,gBAAgB,GAAG,GAAG,EAAE;QAC5B,QAAQ,OAAO,EAAE,CAAC;YAChB,KAAK,SAAS;gBACZ,OAAO,SAAS,CAAC;YACnB,KAAK,SAAS;gBACZ,OAAO,SAAS,CAAC;YACnB,KAAK,QAAQ,CAAC;YACd,KAAK,QAAQ,CAAC;YACd,KAAK,WAAW;gBACd,OAAO,SAAS,CAAC;YACnB;gBACE,OAAO,SAAS,CAAC;QACrB,CAAC;IACH,CAAC,CAAC;IAEF,OAAO,CACL,CAAC,MAAM,CACL,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC,CAC7B,OAAO,CAAC,CAAC,gBAAgB,EAAoD,CAAC,CAC9E,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,IAAI,KAAK,CAAC,CAEV;MAAA,CAAC,QAAQ,CACX;IAAA,EAAE,MAAM,CAAC,CACV,CAAC;AACJ,CAAC","sourcesContent":["\"use client\";\n\nimport React from 'react';\nimport { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\nimport { VariantProps } from \"class-variance-authority\";\nimport { buttonVariants } from \"@/components/ui/button\";\n\ntype ButtonVariant = \"primary\" | \"outline\" | \"accent\" | \"text\" | \"action\" | \"view-more\";\n\ninterface CBREButtonProps extends Omit<React.ComponentProps<typeof Button>, 'variant'> {\n  variant?: ButtonVariant;\n}\n\n/**\n * CBREButton - A button component styled according to CBRE brand guidelines\n * \n * This component demonstrates proper theming and styling for CBRE branded buttons\n * using shadcn/ui Button component as a foundation.\n */\nexport function CBREButton({\n  className,\n  variant = \"primary\",\n  children,\n  onClick,\n  ...props\n}: CBREButtonProps) {\n  // Special case for text variant - render as a span to avoid button styling\n  if (variant === \"text\") {\n    return (\n      <span \n        onClick={onClick}\n        className={cn(\n          \"cursor-pointer inline-block text-[#003F2D] underline decoration-[#003F2D] underline-offset-4 hover:decoration-[#17E88F] transition-colors duration-300\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </span>\n    );\n  }\n  \n  // Map CBRE-specific variants to shadcn/ui variants with appropriate styling\n  const getButtonStyles = () => {\n    switch (variant) {\n      case \"primary\":\n        return cn(\"bg-[#003F2D] text-white hover:bg-[#17E88F] hover:text-[#003F2D] transition-colors duration-300 font-medium\", className);\n      case \"outline\":\n        return cn(\n          \"border border-cbre-green text-cbre-green\", \n          \"hover:bg-[rgba(230,232,233,0.2)] hover:border-cbre-green\", \n          \"transition-colors duration-300\",\n          className\n        );\n      case \"accent\":\n        return cn(\"bg-[#17E88F] text-[#003F2D] hover:bg-[#003F2D] hover:text-white transition-colors duration-300 font-medium\", className);\n      case \"action\":\n        return cn(\"bg-[#538184] text-white hover:bg-[#96B3B6] hover:text-[#012A2D] transition-colors duration-300 px-6 py-2 font-medium text-sm\", className);\n      case \"view-more\":\n        // Fixed styling to match the design exactly - using actual hex values for reliability\n        return cn(\"bg-[#012A2D] text-white hover:bg-[#17E88F] hover:text-[#003F2D] transition-colors duration-300 font-calibre font-medium px-6 py-2.5\", className);\n      default:\n        return className;\n    }\n  };\n\n  // Map to shadcn/ui variants\n  const getShadcnVariant = () => {\n    switch (variant) {\n      case \"primary\":\n        return \"default\";\n      case \"outline\":\n        return \"outline\";\n      case \"accent\":\n      case \"action\":\n      case \"view-more\":\n        return \"default\";\n      default:\n        return \"default\";\n    }\n  };\n\n  return (\n    <Button\n      className={getButtonStyles()}\n      variant={getShadcnVariant() as VariantProps<typeof buttonVariants>[\"variant\"]}\n      onClick={onClick}\n      {...props}\n    >\n      {children}\n    </Button>\n  );\n} "]}