{"version":3,"file":"page.jsx","sourceRoot":"","sources":["page.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport Link from \"next/link\";\nimport { CBREButton } from \"@/components/cbre-button\";\nimport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n} from \"@/components/ui/pagination\";\n\nexport default function PaginationExamplePage() {\n  // Basic pagination state\n  const [basicPage, setBasicPage] = React.useState(1);\n  const basicTotalPages = 10;\n\n  // Advanced pagination state with items\n  const [currentPage, setCurrentPage] = React.useState(5);\n  const itemsPerPage = 10;\n  const totalItems = 87;\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\n\n  // Function to generate page items for advanced pagination\n  const generatePaginationItems = () => {\n    const items = [];\n    const maxVisiblePages = 5; // Show at most 5 page numbers at a time\n    \n    let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\n    let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);\n    \n    // Adjust start if we're near the end\n    if (endPage - startPage + 1 < maxVisiblePages) {\n      startPage = Math.max(1, endPage - maxVisiblePages + 1);\n    }\n    \n    // Add previous button\n    items.push(\n      <PaginationItem key=\"prev\">\n        <PaginationPrevious\n          onClick={() => setCurrentPage(prev => Math.max(1, prev - 1))}\n          aria-disabled={currentPage === 1}\n          tabIndex={currentPage === 1 ? -1 : 0}\n          className={currentPage === 1 ? \"pointer-events-none opacity-50\" : \"\"}\n        />\n      </PaginationItem>\n    );\n    \n    // Show ellipsis at start if needed\n    if (startPage > 1) {\n      items.push(\n        <PaginationItem key=\"start\">\n          <PaginationLink onClick={() => setCurrentPage(1)}>1</PaginationLink>\n        </PaginationItem>\n      );\n      \n      if (startPage > 2) {\n        items.push(\n          <PaginationItem key=\"ellipsis-start\">\n            <PaginationEllipsis />\n          </PaginationItem>\n        );\n      }\n    }\n    \n    // Add page numbers\n    for (let i = startPage; i <= endPage; i++) {\n      items.push(\n        <PaginationItem key={i}>\n          <PaginationLink\n            isActive={currentPage === i}\n            onClick={() => setCurrentPage(i)}\n          >\n            {i}\n          </PaginationLink>\n        </PaginationItem>\n      );\n    }\n    \n    // Show ellipsis at end if needed\n    if (endPage < totalPages) {\n      if (endPage < totalPages - 1) {\n        items.push(\n          <PaginationItem key=\"ellipsis-end\">\n            <PaginationEllipsis />\n          </PaginationItem>\n        );\n      }\n      \n      items.push(\n        <PaginationItem key=\"end\">\n          <PaginationLink onClick={() => setCurrentPage(totalPages)}>\n            {totalPages}\n          </PaginationLink>\n        </PaginationItem>\n      );\n    }\n    \n    // Add next button\n    items.push(\n      <PaginationItem key=\"next\">\n        <PaginationNext\n          onClick={() => setCurrentPage(prev => Math.min(totalPages, prev + 1))}\n          aria-disabled={currentPage === totalPages}\n          tabIndex={currentPage === totalPages ? -1 : 0}\n          className={currentPage === totalPages ? \"pointer-events-none opacity-50\" : \"\"}\n        />\n      </PaginationItem>\n    );\n    \n    return items;\n  };\n\n  // Simulated data for current page\n  const currentItems = Array.from({ length: itemsPerPage }, (_, i) => ({\n    id: (currentPage - 1) * itemsPerPage + i + 1,\n    name: `Item ${(currentPage - 1) * itemsPerPage + i + 1}`,\n  })).filter(item => item.id <= totalItems);\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <div className=\"py-10 px-4 md:px-10 max-w-5xl mx-auto\">\n        <div className=\"mb-8\">\n          <Link href=\"/elements-example\">\n            <CBREButton variant=\"outline\">Back to UI Elements</CBREButton>\n          </Link>\n        </div>\n\n        <h1 className=\"text-6xl font-financier text-cbre-green mb-6\">Pagination Component</h1>\n        <p className=\"text-dark-grey font-calibre mb-10 max-w-3xl\">\n          Pagination allows users to navigate between pages of content, helping to break up large sets of data \n          into manageable chunks. The component provides a consistent way to navigate through multi-page content.\n        </p>\n        \n        {/* Basic Example */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-4xl font-financier text-cbre-green mb-5\">Basic Pagination</h2>\n          <div className=\"bg-[var(--lighter-grey)] p-4 md:p-8\">\n            <div className=\"border border-light-grey bg-white p-8 max-w-2xl mx-auto\">\n              <div className=\"flex flex-col items-center space-y-6\">\n                <Pagination>\n                  <PaginationContent>\n                    <PaginationItem>\n                      <PaginationPrevious \n                        onClick={() => setBasicPage(prev => Math.max(1, prev - 1))}\n                        aria-disabled={basicPage === 1}\n                        tabIndex={basicPage === 1 ? -1 : 0}\n                        className={basicPage === 1 ? \"pointer-events-none opacity-50\" : \"\"}\n                      />\n                    </PaginationItem>\n                    \n                    <PaginationItem>\n                      <PaginationLink isActive={basicPage === 1} onClick={() => setBasicPage(1)}>\n                        1\n                      </PaginationLink>\n                    </PaginationItem>\n                    \n                    <PaginationItem>\n                      <PaginationLink isActive={basicPage === 2} onClick={() => setBasicPage(2)}>\n                        2\n                      </PaginationLink>\n                    </PaginationItem>\n                    \n                    <PaginationItem>\n                      <PaginationLink isActive={basicPage === 3} onClick={() => setBasicPage(3)}>\n                        3\n                      </PaginationLink>\n                    </PaginationItem>\n                    \n                    <PaginationItem>\n                      <PaginationEllipsis />\n                    </PaginationItem>\n                    \n                    <PaginationItem>\n                      <PaginationNext \n                        onClick={() => setBasicPage(prev => Math.min(basicTotalPages, prev + 1))}\n                        aria-disabled={basicPage === basicTotalPages}\n                        tabIndex={basicPage === basicTotalPages ? -1 : 0}\n                        className={basicPage === basicTotalPages ? \"pointer-events-none opacity-50\" : \"\"}\n                      />\n                    </PaginationItem>\n                  </PaginationContent>\n                </Pagination>\n                \n                <div className=\"p-4 border border-light-grey rounded-md text-center\">\n                  <p>Current Page: <strong>{basicPage}</strong> of {basicTotalPages}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white p-6 border border-light-grey mt-6\">\n            <h3 className=\"text-lg font-calibre font-medium text-dark-grey mb-3\">Implementation</h3>\n            <pre className=\"bg-gray-100 p-4 rounded overflow-x-auto text-sm\">\n{`<Pagination>\n  <PaginationContent>\n    <PaginationItem>\n      <PaginationPrevious onClick={() => setPage(page - 1)} />\n    </PaginationItem>\n    <PaginationItem>\n      <PaginationLink isActive={page === 1} onClick={() => setPage(1)}>1</PaginationLink>\n    </PaginationItem>\n    <PaginationItem>\n      <PaginationLink onClick={() => setPage(2)}>2</PaginationLink>\n    </PaginationItem>\n    <PaginationItem>\n      <PaginationLink onClick={() => setPage(3)}>3</PaginationLink>\n    </PaginationItem>\n    <PaginationItem>\n      <PaginationEllipsis />\n    </PaginationItem>\n    <PaginationItem>\n      <PaginationNext onClick={() => setPage(page + 1)} />\n    </PaginationItem>\n  </PaginationContent>\n</Pagination>`}\n            </pre>\n          </div>\n        </div>\n\n        {/* Advanced Example */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-4xl font-financier text-cbre-green mb-5\">Dynamic Pagination with Content</h2>\n          <div className=\"bg-[var(--lighter-grey)] p-4 md:p-8\">\n            <div className=\"border border-light-grey bg-white p-8 max-w-2xl mx-auto\">\n              {/* Item grid */}\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 mb-8\">\n                {currentItems.slice(0, 6).map(item => (\n                  <div key={item.id} className=\"p-4 bg-[var(--lighter-grey)] border border-light-grey rounded-md\">\n                    <p className=\"font-medium\">{item.name}</p>\n                    <p className=\"text-sm text-muted-foreground\">ID: {item.id}</p>\n                  </div>\n                ))}\n              </div>\n              \n              {/* Pagination stats */}\n              <div className=\"flex justify-between items-center mb-4 text-sm text-muted-foreground\">\n                <div>\n                  Showing {Math.min((currentPage - 1) * itemsPerPage + 1, totalItems)} to {Math.min(currentPage * itemsPerPage, totalItems)} of {totalItems} items\n                </div>\n                \n                <div>\n                  Page {currentPage} of {totalPages}\n                </div>\n              </div>\n              \n              {/* Pagination controls */}\n              <div className=\"flex justify-center\">\n                <Pagination>\n                  <PaginationContent>\n                    {generatePaginationItems()}\n                  </PaginationContent>\n                </Pagination>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white p-6 border border-light-grey mt-6\">\n            <h3 className=\"text-lg font-calibre font-medium text-dark-grey mb-3\">Implementation</h3>\n            <pre className=\"bg-gray-100 p-4 rounded overflow-x-auto text-sm\">\n{`// Generate pagination items based on current state\nconst generatePaginationItems = () => {\n  const items = [];\n  const maxVisiblePages = 5;\n  \n  // Calculate page range\n  let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\n  let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);\n  \n  // Add previous button\n  items.push(\n    <PaginationItem key=\"prev\">\n      <PaginationPrevious \n        onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\n        aria-disabled={currentPage === 1}\n      />\n    </PaginationItem>\n  );\n  \n  // Add page numbers and ellipses\n  // ...\n\n  // Add next button\n  items.push(\n    <PaginationItem key=\"next\">\n      <PaginationNext \n        onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))}\n        aria-disabled={currentPage === totalPages}\n      />\n    </PaginationItem>\n  );\n  \n  return items;\n}`}\n            </pre>\n          </div>\n        </div>\n\n        {/* Component API */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-4xl font-financier text-cbre-green mb-5\">Component API</h2>\n          <div className=\"bg-[var(--lighter-grey)] p-4 md:p-8\">\n            <div className=\"border border-light-grey bg-white p-8 max-w-2xl mx-auto\">\n              <div className=\"space-y-8\">\n                <div>\n                  <h3 className=\"text-xl font-calibre font-medium mb-3\">Pagination Component</h3>\n                  <p className=\"mb-3 text-dark-grey font-calibre\">The main container for pagination components.</p>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full border-collapse text-sm\">\n                      <thead>\n                        <tr>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Component</th>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Description</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td className=\"border border-light-grey px-4 py-2 font-mono\">Pagination</td>\n                          <td className=\"border border-light-grey px-4 py-2\">The root container component.</td>\n                        </tr>\n                        <tr>\n                          <td className=\"border border-light-grey px-4 py-2 font-mono\">PaginationContent</td>\n                          <td className=\"border border-light-grey px-4 py-2\">Contains pagination items.</td>\n                        </tr>\n                        <tr>\n                          <td className=\"border border-light-grey px-4 py-2 font-mono\">PaginationItem</td>\n                          <td className=\"border border-light-grey px-4 py-2\">Wrapper for individual pagination elements.</td>\n                        </tr>\n                        <tr>\n                          <td className=\"border border-light-grey px-4 py-2 font-mono\">PaginationLink</td>\n                          <td className=\"border border-light-grey px-4 py-2\">Page link with optional <code>isActive</code> state.</td>\n                        </tr>\n                        <tr>\n                          <td className=\"border border-light-grey px-4 py-2 font-mono\">PaginationPrevious</td>\n                          <td className=\"border border-light-grey px-4 py-2\">Button for navigating to the previous page.</td>\n                        </tr>\n                        <tr>\n                          <td className=\"border border-light-grey px-4 py-2 font-mono\">PaginationNext</td>\n                          <td className=\"border border-light-grey px-4 py-2\">Button for navigating to the next page.</td>\n                        </tr>\n                        <tr>\n                          <td className=\"border border-light-grey px-4 py-2 font-mono\">PaginationEllipsis</td>\n                          <td className=\"border border-light-grey px-4 py-2\">Indicates skipped pages.</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"mt-16 flex justify-center\">\n          <Link href=\"/elements-example\">\n            <CBREButton variant=\"outline\">Back to UI Elements</CBREButton>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n} "]}