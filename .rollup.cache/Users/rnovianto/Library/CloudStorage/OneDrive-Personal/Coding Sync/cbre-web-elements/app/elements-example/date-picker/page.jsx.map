{"version":3,"file":"page.jsx","sourceRoot":"","sources":["page.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport { DateRange } from \"react-day-picker\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { CalendarIcon } from \"lucide-react\";\nimport Link from \"next/link\";\nimport { CBREButton } from \"@/components/cbre-button\";\n\nexport default function DatePickerExamplePage() {\n  // State for basic date picker\n  const [date, setDate] = React.useState<Date>();\n  \n  // State for date range picker\n  const [dateRange, setDateRange] = React.useState<DateRange | undefined>({\n    from: undefined,\n    to: undefined,\n  });\n  \n  // State for form with date\n  const [formDate, setFormDate] = React.useState<Date>();\n  const [formSubmitted, setFormSubmitted] = React.useState(false);\n  \n  // Helper function to format dates\n  const formatDate = (date: Date): string => {\n    return date.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    });\n  };\n  \n  // Handle form submit\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    setFormSubmitted(true);\n    console.log(\"Form submitted with date:\", formDate);\n  };\n\n  // Responsive state for mobile\n  const [isMobile, setIsMobile] = React.useState(false);\n  \n  React.useEffect(() => {\n    const checkScreenSize = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n    \n    // Initial check\n    checkScreenSize();\n    \n    // Add event listener for resize\n    window.addEventListener('resize', checkScreenSize);\n    \n    // Clean up\n    return () => window.removeEventListener('resize', checkScreenSize);\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <div className=\"py-10 px-4 md:px-10 max-w-5xl mx-auto\">\n        <div className=\"mb-8\">\n          <Link href=\"/elements-example\">\n            <CBREButton variant=\"outline\">Back to UI Elements</CBREButton>\n          </Link>\n        </div>\n\n        <h1 className=\"text-6xl font-financier text-cbre-green mb-6\">Date Picker Component</h1>\n        <p className=\"text-dark-grey font-calibre mb-10 max-w-3xl\">\n          The Date Picker component combines the Calendar, Popover, and Button components to create an \n          accessible date selection interface. It provides a clean interface to select a date or date range\n          and is fully customizable.\n        </p>\n        \n        {/* Basic Date Picker */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-4xl font-financier text-cbre-green mb-5\">Basic Date Picker</h2>\n          <div className=\"bg-[var(--lighter-grey)] p-4 md:p-8\">\n            <div className=\"border border-light-grey bg-white p-8 max-w-2xl mx-auto space-y-6\">\n              <div className=\"space-y-2\">\n                <p className=\"text-dark-grey font-calibre mb-2\">Click the button below to open a calendar and select a date</p>\n                <div className=\"flex justify-center\">\n                  <Popover>\n                    <PopoverTrigger asChild>\n                      <Button\n                        variant=\"outline\"\n                        className={cn(\n                          \"w-[240px] justify-start text-left font-normal\",\n                          !date && \"text-muted-foreground\"\n                        )}\n                      >\n                        <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                        {date ? formatDate(date) : \"Select a date\"}\n                      </Button>\n                    </PopoverTrigger>\n                    <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                      <Calendar\n                        mode=\"single\"\n                        selected={date}\n                        onSelect={setDate}\n                        initialFocus\n                      />\n                    </PopoverContent>\n                  </Popover>\n                </div>\n                \n                {date && (\n                  <p className=\"mt-4 text-sm text-dark-grey text-center\">\n                    You selected: <span className=\"font-bold\">{formatDate(date)}</span>\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white p-6 border border-light-grey mt-6\">\n            <h3 className=\"text-lg font-calibre font-medium text-dark-grey mb-3\">Implementation</h3>\n            <pre className=\"bg-gray-100 p-4 rounded overflow-x-auto text-sm\">\n{`import { Calendar } from \"@/components/ui/calendar\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { Button } from \"@/components/ui/button\";\nimport { CalendarIcon } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\n// State for selected date\nconst [date, setDate] = React.useState<Date>();\n\n// Helper function to format dates\nconst formatDate = (date: Date): string => {\n  return date.toLocaleDateString(\"en-US\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  });\n};\n\n<Popover>\n  <PopoverTrigger asChild>\n    <Button\n      variant=\"outline\"\n      className={cn(\n        \"w-[240px] justify-start text-left font-normal\",\n        !date && \"text-muted-foreground\"\n      )}\n    >\n      <CalendarIcon className=\"mr-2 h-4 w-4\" />\n      {date ? formatDate(date) : \"Select a date\"}\n    </Button>\n  </PopoverTrigger>\n  <PopoverContent className=\"w-auto p-0\" align=\"start\">\n    <Calendar\n      mode=\"single\"\n      selected={date}\n      onSelect={setDate}\n      initialFocus\n    />\n  </PopoverContent>\n</Popover>`}\n            </pre>\n          </div>\n        </div>\n        \n        {/* Date Range Picker */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-4xl font-financier text-cbre-green mb-5\">Date Range Picker</h2>\n          <div className=\"bg-[var(--lighter-grey)] p-4 md:p-8\">\n            <div className=\"border border-light-grey bg-white p-8 max-w-3xl mx-auto space-y-6\">\n              <div className=\"space-y-2\">\n                <p className=\"text-dark-grey font-calibre mb-2\">Select a range of dates from the calendar</p>\n                <div className=\"flex justify-center\">\n                  <Popover>\n                    <PopoverTrigger asChild>\n                      <Button\n                        variant=\"outline\"\n                        className={cn(\n                          \"w-[300px] justify-start text-left font-normal\",\n                          !dateRange?.from && \"text-muted-foreground\"\n                        )}\n                      >\n                        <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                        {dateRange?.from ? (\n                          dateRange.to ? (\n                            <>\n                              {formatDate(dateRange.from)} - {formatDate(dateRange.to)}\n                            </>\n                          ) : (\n                            formatDate(dateRange.from)\n                          )\n                        ) : (\n                          \"Select a date range\"\n                        )}\n                      </Button>\n                    </PopoverTrigger>\n                    <PopoverContent className=\"w-auto md:w-[500px] lg:w-[500px] p-0\" align=\"start\">\n                      <div className=\"p-2\">\n                        <Calendar\n                          mode=\"range\"\n                          selected={dateRange}\n                          onSelect={setDateRange}\n                          numberOfMonths={isMobile ? 1 : 2}\n                          initialFocus\n                          className=\"mx-auto\"\n                          classNames={{\n                            months: \"flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-1\",\n                            month: \"space-y-4 w-full\",\n                            caption: \"flex justify-center pt-1 relative items-center\",\n                            caption_label: \"text-sm font-medium\",\n                            table: \"w-full border-collapse space-y-1\",\n                            cell: \"relative p-0 text-center\",\n                            day: \"h-8 w-8 p-0 font-normal\"\n                          }}\n                        />\n                      </div>\n                    </PopoverContent>\n                  </Popover>\n                </div>\n                \n                {dateRange?.from && (\n                  <p className=\"mt-4 text-sm text-dark-grey text-center\">\n                    {dateRange.to ? (\n                      <>\n                        Selected range: <span className=\"font-bold\">{formatDate(dateRange.from)}</span> to{\" \"}\n                        <span className=\"font-bold\">{formatDate(dateRange.to)}</span>\n                      </>\n                    ) : (\n                      <>\n                        Selected start date: <span className=\"font-bold\">{formatDate(dateRange.from)}</span>\n                      </>\n                    )}\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white p-6 border border-light-grey mt-6\">\n            <h3 className=\"text-lg font-calibre font-medium text-dark-grey mb-3\">Implementation</h3>\n            <pre className=\"bg-gray-100 p-4 rounded overflow-x-auto text-sm\">\n{`import { DateRange } from \"react-day-picker\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\nimport { Button } from \"@/components/ui/button\";\nimport { CalendarIcon } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\n// State for date range\nconst [dateRange, setDateRange] = React.useState<DateRange | undefined>({\n  from: undefined,\n  to: undefined,\n});\n\n// Responsive handling for mobile devices\nconst [isMobile, setIsMobile] = React.useState(false);\nReact.useEffect(() => {\n  const checkScreenSize = () => {\n    setIsMobile(window.innerWidth < 768);\n  };\n  checkScreenSize();\n  window.addEventListener('resize', checkScreenSize);\n  return () => window.removeEventListener('resize', checkScreenSize);\n}, []);\n\n<Popover>\n  <PopoverTrigger asChild>\n    <Button\n      variant=\"outline\"\n      className={cn(\n        \"w-[300px] justify-start text-left font-normal\",\n        !dateRange?.from && \"text-muted-foreground\"\n      )}\n    >\n      <CalendarIcon className=\"mr-2 h-4 w-4\" />\n      {dateRange?.from ? (\n        dateRange.to ? (\n          <>\n            {formatDate(dateRange.from)} - {formatDate(dateRange.to)}\n          </>\n        ) : (\n          formatDate(dateRange.from)\n        )\n      ) : (\n        \"Select a date range\"\n      )}\n    </Button>\n  </PopoverTrigger>\n  <PopoverContent className=\"w-auto md:w-[500px] lg:w-[500px] p-0\" align=\"start\">\n    <div className=\"p-2\">\n      <Calendar\n        mode=\"range\"\n        selected={dateRange}\n        onSelect={setDateRange}\n        numberOfMonths={isMobile ? 1 : 2}\n        initialFocus\n        className=\"mx-auto\"\n        classNames={{\n          months: \"flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-1\",\n          month: \"space-y-4 w-full\",\n          caption: \"flex justify-center pt-1 relative items-center\",\n          caption_label: \"text-sm font-medium\",\n          table: \"w-full border-collapse space-y-1\",\n          cell: \"relative p-0 text-center\",\n          day: \"h-8 w-8 p-0 font-normal\"\n        }}\n      />\n    </div>\n  </PopoverContent>\n</Popover>`}\n            </pre>\n          </div>\n        </div>\n        \n        {/* Form Integration */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-4xl font-financier text-cbre-green mb-5\">Form Integration</h2>\n          <div className=\"bg-[var(--lighter-grey)] p-4 md:p-8\">\n            <div className=\"border border-light-grey bg-white p-8 max-w-2xl mx-auto space-y-6\">\n              <div className=\"space-y-2\">\n                <p className=\"text-dark-grey font-calibre mb-2\">Date Picker in a form with validation</p>\n                <form onSubmit={handleSubmit} className=\"space-y-6\">\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-dark-grey\">Appointment Date</label>\n                    <p className=\"text-sm text-muted-foreground pb-2\">\n                      Please select your preferred appointment date.\n                    </p>\n                    <Popover>\n                      <PopoverTrigger asChild>\n                        <Button\n                          variant=\"outline\"\n                          className={cn(\n                            \"w-full md:w-[240px] justify-start text-left font-normal\",\n                            !formDate && \"text-muted-foreground\"\n                          )}\n                        >\n                          <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                          {formDate ? formatDate(formDate) : \"Select a date\"}\n                        </Button>\n                      </PopoverTrigger>\n                      <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                        <Calendar\n                          mode=\"single\"\n                          selected={formDate}\n                          onSelect={setFormDate}\n                          disabled={[\n                            { before: new Date() }, // Disable past dates\n                          ]}\n                          initialFocus\n                        />\n                      </PopoverContent>\n                    </Popover>\n                    {!formDate && formSubmitted && (\n                      <p className=\"text-sm text-destructive\">Please select a date</p>\n                    )}\n                  </div>\n                  \n                  <div className=\"flex justify-end space-x-4\">\n                    <Button \n                      type=\"button\" \n                      variant=\"outline\"\n                      onClick={() => {\n                        setFormDate(undefined);\n                        setFormSubmitted(false);\n                      }}\n                    >\n                      Reset\n                    </Button>\n                    <Button type=\"submit\">Submit</Button>\n                  </div>\n                </form>\n                \n                {formDate && formSubmitted && (\n                  <div className=\"mt-6 p-4 bg-gray-50 rounded\">\n                    <h4 className=\"text-sm font-medium mb-2\">Form Submitted Successfully</h4>\n                    <p className=\"text-sm\">\n                      Appointment scheduled for: <span className=\"font-bold\">{formatDate(formDate)}</span>\n                    </p>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white p-6 border border-light-grey mt-6\">\n            <h3 className=\"text-lg font-calibre font-medium text-dark-grey mb-3\">Implementation</h3>\n            <pre className=\"bg-gray-100 p-4 rounded overflow-x-auto text-sm\">\n{`import { Calendar } from \"@/components/ui/calendar\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\nimport { Button } from \"@/components/ui/button\";\nimport { CalendarIcon } from \"lucide-react\";\n\n// State for form date and submission status\nconst [formDate, setFormDate] = React.useState<Date>();\nconst [formSubmitted, setFormSubmitted] = React.useState(false);\n\n// Handle form submit\nconst handleSubmit = (e: React.FormEvent) => {\n  e.preventDefault();\n  setFormSubmitted(true);\n  \n  if (formDate) {\n    // Process form submission\n    console.log(\"Form submitted with date:\", formDate);\n  }\n};\n\n<form onSubmit={handleSubmit} className=\"space-y-6\">\n  <div className=\"space-y-2\">\n    <label className=\"text-sm font-medium text-dark-grey\">Appointment Date</label>\n    <p className=\"text-sm text-muted-foreground pb-2\">\n      Please select your preferred appointment date.\n    </p>\n    <Popover>\n      <PopoverTrigger asChild>\n        <Button\n          variant=\"outline\"\n          className={cn(\n            \"w-full md:w-[240px] justify-start text-left font-normal\",\n            !formDate && \"text-muted-foreground\"\n          )}\n        >\n          <CalendarIcon className=\"mr-2 h-4 w-4\" />\n          {formDate ? formatDate(formDate) : \"Select a date\"}\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-auto p-0\" align=\"start\">\n        <Calendar\n          mode=\"single\"\n          selected={formDate}\n          onSelect={setFormDate}\n          disabled={[\n            { before: new Date() }, // Disable past dates\n          ]}\n          initialFocus\n        />\n      </PopoverContent>\n    </Popover>\n    {!formDate && formSubmitted && (\n      <p className=\"text-sm text-destructive\">Please select a date</p>\n    )}\n  </div>\n  \n  <div className=\"flex justify-end space-x-4\">\n    <Button type=\"button\" variant=\"outline\" onClick={() => {\n      setFormDate(undefined);\n      setFormSubmitted(false);\n    }}>\n      Reset\n    </Button>\n    <Button type=\"submit\">Submit</Button>\n  </div>\n</form>`}\n            </pre>\n          </div>\n        </div>\n        \n        {/* Component API */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-4xl font-financier text-cbre-green mb-5\">Component Structure</h2>\n          <div className=\"bg-[var(--lighter-grey)] p-4 md:p-8\">\n            <div className=\"border border-light-grey bg-white p-8 max-w-2xl mx-auto\">\n              <div className=\"space-y-8\">\n                <div>\n                  <h3 className=\"text-xl font-calibre font-medium mb-3\">Date Picker Components</h3>\n                  <p className=\"mb-3 text-dark-grey font-calibre\">\n                    The Date Picker is composed of several components from shadcn/ui that must be used within the correct structure.\n                  </p>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full border-collapse text-sm\">\n                      <thead>\n                        <tr>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Component</th>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Description</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td className=\"border border-light-grey px-4 py-2 font-mono\">Popover</td>\n                          <td className=\"border border-light-grey px-4 py-2\">The root container for the date picker.</td>\n                        </tr>\n                        <tr>\n                          <td className=\"border border-light-grey px-4 py-2 font-mono\">PopoverTrigger</td>\n                          <td className=\"border border-light-grey px-4 py-2\">The button that opens the date picker. Use <code>asChild</code> to wrap a custom button.</td>\n                        </tr>\n                        <tr>\n                          <td className=\"border border-light-grey px-4 py-2 font-mono\">Button</td>\n                          <td className=\"border border-light-grey px-4 py-2\">Used inside the PopoverTrigger to create the date picker button.</td>\n                        </tr>\n                        <tr>\n                          <td className=\"border border-light-grey px-4 py-2 font-mono\">PopoverContent</td>\n                          <td className=\"border border-light-grey px-4 py-2\">Contains the calendar that appears when the trigger is clicked.</td>\n                        </tr>\n                        <tr>\n                          <td className=\"border border-light-grey px-4 py-2 font-mono\">Calendar</td>\n                          <td className=\"border border-light-grey px-4 py-2\">The date selection component placed inside the PopoverContent.</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n                {/* Component API */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-4xl font-financier text-cbre-green mb-5\">Component API</h2>\n          <div className=\"bg-[var(--lighter-grey)] p-4 md:p-8\">\n            <div className=\"border border-light-grey bg-white p-8 max-w-2xl mx-auto\">\n              <div className=\"space-y-8\">\n                <div>\n                  <h3 className=\"text-xl font-calibre font-medium mb-3\">DatePicker Components</h3>\n                  <p className=\"mb-3 text-dark-grey font-calibre\">\n                    The DatePicker component provides a consistent UI element following CBRE design guidelines.\n                  </p>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full border-collapse text-sm\">\n                      <thead>\n                        <tr>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Component</th>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Description</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td className=\"border border-light-grey px-4 py-2 font-mono\">DatePicker</td>\n                          <td className=\"border border-light-grey px-4 py-2\">The root component.</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"text-xl font-calibre font-medium mb-3\">DatePicker Props</h3>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full border-collapse text-sm\">\n                      <thead>\n                        <tr>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Prop</th>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Type</th>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Description</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td className=\"border border-light-grey px-4 py-2 font-mono\">className</td>\n                          <td className=\"border border-light-grey px-4 py-2\">string</td>\n                          <td className=\"border border-light-grey px-4 py-2\">Additional CSS classes to apply to the component.</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n<div className=\"mt-16 flex justify-center\">\n          <Link href=\"/elements-example\">\n            <CBREButton variant=\"outline\">Back to UI Elements</CBREButton>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n} "]}