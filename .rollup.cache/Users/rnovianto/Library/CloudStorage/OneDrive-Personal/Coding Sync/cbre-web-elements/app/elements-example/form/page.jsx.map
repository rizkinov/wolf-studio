{"version":3,"file":"page.jsx","sourceRoot":"","sources":["page.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport Link from \"next/link\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport * as z from \"zod\";\n\nimport { CBREButton } from \"@/components/cbre-button\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\n\n// Define validation schema using zod\nconst formSchema = z.object({\n  name: z\n    .string()\n    .min(2, { message: \"Name must be at least 2 characters.\" })\n    .max(50, { message: \"Name must not exceed 50 characters.\" }),\n  email: z\n    .string()\n    .email({ message: \"Please enter a valid email address.\" }),\n  phone: z\n    .string()\n    .min(10, { message: \"Phone number must be at least 10 digits.\" })\n    .optional()\n    .or(z.literal(\"\")),\n  country: z\n    .string({\n      required_error: \"Please select a country.\",\n    }),\n  message: z\n    .string()\n    .min(10, { message: \"Message must be at least 10 characters.\" })\n    .max(500, { message: \"Message must not exceed 500 characters.\" }),\n  acceptTerms: z\n    .boolean()\n    .refine(val => val === true, {\n      message: \"You must accept the terms and conditions.\",\n    }),\n  marketingConsent: z\n    .boolean()\n    .optional(),\n});\n\nexport default function FormExamplePage() {\n  const [submittedData, setSubmittedData] = React.useState<z.infer<typeof formSchema> | null>(null);\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  \n  // Create form using react-hook-form and zod resolver\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      country: \"\",\n      message: \"\",\n      acceptTerms: false,\n      marketingConsent: false,\n    },\n  });\n\n  // Handle form submission\n  const onSubmit = async (data: z.infer<typeof formSchema>) => {\n    setIsSubmitting(true);\n    \n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1500));\n    \n    setSubmittedData(data);\n    setIsSubmitting(false);\n    \n    // Optional: Reset the form after submission\n    // form.reset();\n  };\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <div className=\"py-10 px-4 md:px-10 max-w-5xl mx-auto\">\n        <div className=\"mb-8\">\n          <Link href=\"/elements-example\">\n            <CBREButton variant=\"outline\">Back to UI Elements</CBREButton>\n          </Link>\n        </div>\n\n        <h1 className=\"text-6xl font-financier text-cbre-green mb-6\">Form Component</h1>\n        <p className=\"text-dark-grey font-calibre mb-10 max-w-3xl\">\n          The Form component provides a comprehensive way to create and manage forms using react-hook-form with zod validation.\n          It follows shadcn/ui's compositional pattern with various form-related components for a clean and accessible implementation.\n        </p>\n        \n        {/* Basic Form Example */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-4xl font-financier text-cbre-green mb-5\">Contact Form Example</h2>\n          <div className=\"bg-[var(--lighter-grey)] p-4 md:p-8\">\n            <div className=\"border border-light-grey bg-white p-8 max-w-2xl mx-auto\">\n              <Form {...form}>\n                <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                  {/* Name Field */}\n                  <FormField\n                    control={form.control}\n                    name=\"name\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Full Name</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"John Doe\" {...field} />\n                        </FormControl>\n                        <FormDescription>\n                          Your full name as it appears on official documents.\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  \n                  {/* Email Field */}\n                  <FormField\n                    control={form.control}\n                    name=\"email\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Email</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"john.doe@example.com\" type=\"email\" {...field} />\n                        </FormControl>\n                        <FormDescription>\n                          We'll never share your email with anyone else.\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  \n                  {/* Phone Field (Optional) */}\n                  <FormField\n                    control={form.control}\n                    name=\"phone\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Phone Number (Optional)</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"+1 (555) 123-4567\" {...field} />\n                        </FormControl>\n                        <FormDescription>\n                          Your contact number for follow-up questions.\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  \n                  {/* Country Field */}\n                  <FormField\n                    control={form.control}\n                    name=\"country\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Country</FormLabel>\n                        <Select \n                          onValueChange={field.onChange} \n                          defaultValue={field.value}\n                        >\n                          <FormControl>\n                            <SelectTrigger>\n                              <SelectValue placeholder=\"Select a country\" />\n                            </SelectTrigger>\n                          </FormControl>\n                          <SelectContent>\n                            <SelectItem value=\"us\">United States</SelectItem>\n                            <SelectItem value=\"ca\">Canada</SelectItem>\n                            <SelectItem value=\"uk\">United Kingdom</SelectItem>\n                            <SelectItem value=\"au\">Australia</SelectItem>\n                            <SelectItem value=\"fr\">France</SelectItem>\n                            <SelectItem value=\"de\">Germany</SelectItem>\n                            <SelectItem value=\"jp\">Japan</SelectItem>\n                          </SelectContent>\n                        </Select>\n                        <FormDescription>\n                          Select the country you currently reside in.\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  \n                  {/* Message Field */}\n                  <FormField\n                    control={form.control}\n                    name=\"message\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Message</FormLabel>\n                        <FormControl>\n                          <Textarea \n                            placeholder=\"Please describe how we can help you...\" \n                            rows={5}\n                            {...field} \n                          />\n                        </FormControl>\n                        <FormDescription>\n                          Your inquiry details, questions, or comments (10-500 characters).\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  \n                  {/* Terms Checkbox Field */}\n                  <FormField\n                    control={form.control}\n                    name=\"acceptTerms\"\n                    render={({ field }) => (\n                      <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                        <FormControl>\n                          <Checkbox\n                            id=\"acceptTerms\"\n                            checked={field.value}\n                            onCheckedChange={field.onChange}\n                            className=\"mt-1\"\n                          />\n                        </FormControl>\n                        <div className=\"space-y-1 leading-none\">\n                          <FormLabel htmlFor=\"acceptTerms\" className=\"cursor-pointer\">\n                            I accept the terms and conditions\n                          </FormLabel>\n                          <FormDescription>\n                            By checking this box, you agree to our <Link href=\"#\" className=\"text-cbre-green underline\">Terms of Service</Link> and <Link href=\"#\" className=\"text-cbre-green underline\">Privacy Policy</Link>.\n                          </FormDescription>\n                          <FormMessage />\n                        </div>\n                      </FormItem>\n                    )}\n                  />\n                  \n                  {/* Marketing Consent Checkbox Field */}\n                  <FormField\n                    control={form.control}\n                    name=\"marketingConsent\"\n                    render={({ field }) => (\n                      <FormItem className=\"flex flex-row items-start space-x-3 space-y-0 rounded-md\">\n                        <FormControl>\n                          <Checkbox\n                            id=\"marketingConsent\"\n                            checked={field.value}\n                            onCheckedChange={field.onChange}\n                            className=\"mt-1\"\n                          />\n                        </FormControl>\n                        <div className=\"space-y-1 leading-none\">\n                          <FormLabel htmlFor=\"marketingConsent\" className=\"cursor-pointer\">\n                            I want to receive marketing emails\n                          </FormLabel>\n                          <FormDescription>\n                            You can unsubscribe at any time.\n                          </FormDescription>\n                        </div>\n                      </FormItem>\n                    )}\n                  />\n                  \n                  {/* Submit Button */}\n                  <div className=\"flex justify-end\">\n                    <CBREButton \n                      type=\"submit\" \n                      variant=\"primary\"\n                      disabled={isSubmitting}\n                    >\n                      {isSubmitting ? \"Submitting...\" : \"Submit Form\"}\n                    </CBREButton>\n                  </div>\n                </form>\n              </Form>\n              \n              {/* Display submitted data */}\n              {submittedData && (\n                <div className=\"mt-8 p-4 border border-accent-green rounded bg-accent-green/10\">\n                  <h3 className=\"text-xl font-medium text-cbre-green mb-3\">Form Submitted Successfully</h3>\n                  <div className=\"grid gap-2\">\n                    <p><strong>Name:</strong> {submittedData.name}</p>\n                    <p><strong>Email:</strong> {submittedData.email}</p>\n                    <p><strong>Phone:</strong> {submittedData.phone || \"Not provided\"}</p>\n                    <p><strong>Country:</strong> {submittedData.country}</p>\n                    <p><strong>Message:</strong> {submittedData.message}</p>\n                    <p><strong>Marketing Consent:</strong> {submittedData.marketingConsent ? \"Yes\" : \"No\"}</p>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"bg-white p-6 border border-light-grey mt-6\">\n            <h3 className=\"text-lg font-calibre font-medium text-dark-grey mb-3\">Implementation</h3>\n            <pre className=\"bg-gray-100 p-4 rounded overflow-x-auto text-sm\">\n{`// 1. First, define a zod schema for validation\nconst formSchema = z.object({\n  name: z.string().min(2).max(50),\n  email: z.string().email(),\n  country: z.string({\n    required_error: \"Please select a country.\",\n  }),\n  message: z.string().min(10).max(500),\n  acceptTerms: z.boolean().refine(val => val === true, {\n    message: \"You must accept terms and conditions.\",\n  }),\n});\n\n// 2. Set up the form with react-hook-form and zod resolver\nconst form = useForm<z.infer<typeof formSchema>>({\n  resolver: zodResolver(formSchema),\n  defaultValues: {\n    name: \"\",\n    email: \"\",\n    country: \"\",\n    // Additional default values...\n  },\n});\n\n// 3. Handle form submission\nconst onSubmit = (data: z.infer<typeof formSchema>) => {\n  // Process form data\n};\n\n// 4. Implement the form with shadcn/ui Form components\n<Form {...form}>\n  <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n    <FormField\n      control={form.control}\n      name=\"name\"\n      render={({ field }) => (\n        <FormItem>\n          <FormLabel>Full Name</FormLabel>\n          <FormControl>\n            <Input placeholder=\"John Doe\" {...field} />\n          </FormControl>\n          <FormDescription>\n            Your full name as it appears on official documents.\n          </FormDescription>\n          <FormMessage />\n        </FormItem>\n      )}\n    />\n    \n    {/* Additional form fields */}\n    \n    <FormField\n      control={form.control}\n      name=\"acceptTerms\"\n      render={({ field }) => (\n        <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n          <FormControl>\n            <Checkbox\n              id=\"acceptTerms\"\n              checked={field.value}\n              onCheckedChange={field.onChange}\n              className=\"mt-1\"\n            />\n          </FormControl>\n          <div className=\"space-y-1 leading-none\">\n            <FormLabel htmlFor=\"acceptTerms\">I accept the terms and conditions</FormLabel>\n            <FormMessage />\n          </div>\n        </FormItem>\n      )}\n    />\n    \n    <Button type=\"submit\">Submit</Button>\n  </form>\n</Form>`}\n            </pre>\n          </div>\n        </div>\n        \n        {/* Form Composition Guide */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-4xl font-financier text-cbre-green mb-5\">Form Composition Guide</h2>\n          <div className=\"bg-white p-6 border border-light-grey\">\n            <div className=\"space-y-6\">\n              <p className=\"text-dark-grey font-calibre\">\n                The shadcn/ui Form component follows a specific compositional pattern to ensure proper integration with react-hook-form:\n              </p>\n              \n              <div className=\"space-y-4\">\n                <h3 className=\"text-xl font-medium text-cbre-green\">Key Components</h3>\n                <ul className=\"list-disc pl-6 space-y-2 text-dark-grey font-calibre\">\n                  <li><code className=\"bg-lighter-grey px-1 py-0.5 rounded\">Form</code> - The main wrapper that provides the FormProvider from react-hook-form.</li>\n                  <li><code className=\"bg-lighter-grey px-1 py-0.5 rounded\">FormField</code> - Connects an individual field to react-hook-form's Controller.</li>\n                  <li><code className=\"bg-lighter-grey px-1 py-0.5 rounded\">FormItem</code> - Groups related form elements together.</li>\n                  <li><code className=\"bg-lighter-grey px-1 py-0.5 rounded\">FormLabel</code> - Provides an accessible label for the form control.</li>\n                  <li><code className=\"bg-lighter-grey px-1 py-0.5 rounded\">FormControl</code> - Wraps the actual input element and connects it to the form context.</li>\n                  <li><code className=\"bg-lighter-grey px-1 py-0.5 rounded\">FormDescription</code> - Provides additional descriptive text for the field.</li>\n                  <li><code className=\"bg-lighter-grey px-1 py-0.5 rounded\">FormMessage</code> - Displays validation error messages.</li>\n                </ul>\n              </div>\n              \n              <div className=\"space-y-4\">\n                <h3 className=\"text-xl font-medium text-cbre-green\">Form Field Structure</h3>\n                <p className=\"text-dark-grey font-calibre\">\n                  Each form field should follow this general structure:\n                </p>\n                <pre className=\"bg-gray-100 p-4 rounded overflow-x-auto text-sm\">\n{`<FormField\n  control={form.control}\n  name=\"fieldName\"\n  render={({ field }) => (\n    <FormItem>\n      <FormLabel>Field Label</FormLabel>\n      <FormControl>\n        <Input {...field} />\n      </FormControl>\n      <FormDescription>\n        Additional information about this field.\n      </FormDescription>\n      <FormMessage />\n    </FormItem>\n  )}\n/>`}\n                </pre>\n              </div>\n              \n              <div className=\"space-y-4\">\n                <h3 className=\"text-xl font-medium text-cbre-green\">Best Practices</h3>\n                <ul className=\"list-disc pl-6 space-y-2 text-dark-grey font-calibre\">\n                  <li>Always use zod (or similar) for schema validation to ensure type safety.</li>\n                  <li>Ensure each form field has a proper label with the <code className=\"bg-lighter-grey px-1 py-0.5 rounded\">FormLabel</code> component.</li>\n                  <li>Use <code className=\"bg-lighter-grey px-1 py-0.5 rounded\">FormDescription</code> to provide helpful context where needed.</li>\n                  <li>Implement proper error handling with <code className=\"bg-lighter-grey px-1 py-0.5 rounded\">FormMessage</code> components.</li>\n                  <li>Consider the accessible form structure: labels should be associated with their controls.</li>\n                  <li>For checkbox and radio inputs, adjust the layout to place labels after the control.</li>\n                  <li>Always add an explicit <code className=\"bg-lighter-grey px-1 py-0.5 rounded\">id</code> to checkboxes and connect it to the <code className=\"bg-lighter-grey px-1 py-0.5 rounded\">FormLabel</code> using <code className=\"bg-lighter-grey px-1 py-0.5 rounded\">htmlFor</code> for proper accessibility and to allow clicking on the label text to toggle the checkbox.</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n                {/* Component API */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-4xl font-financier text-cbre-green mb-5\">Component API</h2>\n          <div className=\"bg-[var(--lighter-grey)] p-4 md:p-8\">\n            <div className=\"border border-light-grey bg-white p-8 max-w-2xl mx-auto\">\n              <div className=\"space-y-8\">\n                <div>\n                  <h3 className=\"text-xl font-calibre font-medium mb-3\">Form Components</h3>\n                  <p className=\"mb-3 text-dark-grey font-calibre\">\n                    The Form component provides a consistent UI element following CBRE design guidelines.\n                  </p>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full border-collapse text-sm\">\n                      <thead>\n                        <tr>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Component</th>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Description</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td className=\"border border-light-grey px-4 py-2 font-mono\">Form</td>\n                          <td className=\"border border-light-grey px-4 py-2\">The root component.</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"text-xl font-calibre font-medium mb-3\">Form Props</h3>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full border-collapse text-sm\">\n                      <thead>\n                        <tr>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Prop</th>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Type</th>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Description</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td className=\"border border-light-grey px-4 py-2 font-mono\">className</td>\n                          <td className=\"border border-light-grey px-4 py-2\">string</td>\n                          <td className=\"border border-light-grey px-4 py-2\">Additional CSS classes to apply to the component.</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n<div className=\"mt-16 flex justify-center\">\n          <Link href=\"/elements-example\">\n            <CBREButton variant=\"outline\">Back to UI Elements</CBREButton>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n} "]}