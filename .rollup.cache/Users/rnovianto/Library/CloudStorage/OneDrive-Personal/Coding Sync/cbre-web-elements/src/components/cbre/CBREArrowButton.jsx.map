{"version":3,"file":"CBREArrowButton.jsx","sourceRoot":"","sources":["CBREArrowButton.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\";\n\nimport React, { useState } from 'react';\nimport { cn } from \"@/lib/utils\";\n\ninterface CBREArrowButtonProps {\n  children: React.ReactNode;\n  href?: string;\n  className?: string;\n  onClick?: () => void;\n}\n\n/**\n * CBREArrowButton\n * \n * A custom button that displays \"-- Text\" by default, and transforms to \"Text -->\"\n * on hover, following CBRE's design language.\n */\nexport const CBREArrowButton = ({\n  children,\n  href,\n  className,\n  onClick,\n}: CBREArrowButtonProps) => {\n  const [isHovered, setIsHovered] = useState(false);\n  \n  const content = (\n    <div \n      className={cn(\n        \"group inline-flex items-center relative h-5\", \n        className\n      )}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      onClick={onClick}\n    >\n      {/* Container to maintain fixed height and width */}\n      <div className=\"w-5 h-5 relative mr-2\">\n        {/* Default state dash */}\n        <div \n          className={cn(\n            \"absolute inset-0 transition-transform duration-300 ease-in-out\",\n            isHovered ? \"transform -translate-x-2 opacity-0\" : \"transform translate-x-0 opacity-100\"\n          )}\n        >\n          <svg \n            width=\"20\" \n            height=\"20\" \n            viewBox=\"0 0 20 20\" \n            fill=\"none\" \n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <line \n              x1=\"4\" \n              y1=\"10\" \n              x2=\"16\" \n              y2=\"10\" \n              stroke=\"#17E88F\" \n              strokeWidth=\"1.5\" \n              strokeLinecap=\"round\"\n            />\n          </svg>\n        </div>\n      </div>\n      \n      {/* Text content - always visible but moves left on hover */}\n      <span className={cn(\n        \"text-primary font-calibre font-medium transition-transform duration-300 ease-in-out\",\n        isHovered ? \"transform -translate-x-7\" : \"transform translate-x-0\"\n      )}>\n        {children}\n      </span>\n      \n      {/* Container for arrow to maintain fixed dimensions */}\n      <div className={cn(\n        \"w-5 h-5 relative transition-all duration-300 ease-in-out\",\n        isHovered ? \"ml-[-15px]\" : \"ml-2\"\n      )}>\n        {/* Hover state arrow */}\n        <div className={cn(\n          \"absolute inset-0 transition-transform duration-300 ease-in-out\",\n          isHovered ? \"transform translate-x-0 opacity-100\" : \"transform translate-x-2 opacity-0\"\n        )}>\n          <svg \n            width=\"20\" \n            height=\"20\" \n            viewBox=\"0 0 20 20\" \n            fill=\"none\" \n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <line \n              x1=\"2\" \n              y1=\"10\" \n              x2=\"12\" \n              y2=\"10\" \n              stroke=\"#17E88F\" \n              strokeWidth=\"1.5\" \n              strokeLinecap=\"round\"\n            />\n            <path \n              d=\"M10 6L14 10L10 14\" \n              stroke=\"#17E88F\" \n              strokeWidth=\"1.5\" \n              strokeLinecap=\"round\" \n              strokeLinejoin=\"round\"\n            />\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n\n  if (href) {\n    return (\n      <a href={href} className=\"inline-block\">\n        {content}\n      </a>\n    );\n  }\n\n  return content;\n}; "]}