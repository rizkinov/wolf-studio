{"version":3,"file":"CBREChart.jsx","sourceRoot":"","sources":["CBREChart.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  Bar,\n  BarChart,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Pie,\n  PieChart,\n  Cell,\n} from \"recharts\";\nimport { cn } from \"@/lib/utils\";\n\n// Chart Data Types\ninterface ChartData {\n  name: string;\n  actual?: number;\n  target?: number;\n  value?: number;\n}\n\n// CBRE Chart Colors using CSS variables\nexport const chartConfig = {\n  colors: [\n    \"var(--cbre-green)\",      // Primary\n    \"var(--accent-green)\",    // Secondary\n    \"var(--celadon)\",         // Tertiary\n    \"var(--wheat)\",           // Quaternary\n    \"var(--sage)\",            // Additional\n    \"var(--midnight)\",        // Additional\n  ],\n  axis: \"var(--dark-grey)\",\n  grid: \"var(--light-grey)\",\n  tooltip: {\n    background: \"var(--lighter-grey)\",\n    text: \"var(--dark-grey)\",\n    border: \"var(--light-grey)\",\n  }\n};\n\n// Chart Tooltip Component\nexport function ChartTooltip({\n  active,\n  payload,\n  label,\n  className,\n}: {\n  active?: boolean;\n  payload?: any[];\n  label?: string;\n  className?: string;\n}) {\n  if (active && payload && payload.length) {\n    return (\n      <div\n        className={cn(\n          \"border bg-[var(--lighter-grey)] p-2 shadow-sm\",\n          className\n        )}\n        style={{ \n          border: `1px solid var(--light-grey)`,\n          color: `var(--dark-grey)`\n        }}\n      >\n        <div className=\"flex flex-col gap-1\">\n          <span className=\"text-[0.70rem] uppercase font-medium\">\n            {label}\n          </span>\n          {payload.map((item, index) => (\n            <div key={index} className=\"flex items-center gap-2\">\n              <div \n                className=\"w-2 h-2\" \n                style={{ backgroundColor: item.fill || item.color }}\n              />\n              <span className=\"text-sm capitalize\">{item.dataKey}:</span>\n              <span className=\"text-sm font-medium\">${item.value}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  return null;\n}\n\n// Bar Chart Component\nexport function CBRESimpleBarChart({\n  data,\n  className,\n}: {\n  data: ChartData[];\n  className?: string;\n}) {\n  return (\n    <div className={cn(\"w-full\", className)}>\n      <ResponsiveContainer width=\"100%\" height={350}>\n        <BarChart data={data}>\n          <CartesianGrid\n            strokeDasharray=\"3 3\"\n            stroke={chartConfig.grid}\n            vertical={false}\n          />\n          <XAxis\n            dataKey=\"name\"\n            stroke={chartConfig.axis}\n            fontSize={12}\n            tickLine={false}\n            axisLine={false}\n          />\n          <YAxis\n            stroke={chartConfig.axis}\n            fontSize={12}\n            tickLine={false}\n            axisLine={false}\n            tickFormatter={(value: number) => `$${value}`}\n          />\n          <Tooltip content={<ChartTooltip />} />\n          <Bar\n            dataKey=\"total\"\n            fill={`var(--cbre-green)`}\n            radius={[0, 0, 0, 0]}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\n// Line Chart Component\nexport function CBRESimpleLineChart({\n  data,\n  className,\n}: {\n  data: ChartData[];\n  className?: string;\n}) {\n  return (\n    <div className={cn(\"w-full\", className)}>\n      <ResponsiveContainer width=\"100%\" height={350}>\n        <LineChart data={data}>\n          <CartesianGrid\n            strokeDasharray=\"3 3\"\n            stroke={chartConfig.grid}\n            vertical={false}\n          />\n          <XAxis\n            dataKey=\"name\"\n            stroke={chartConfig.axis}\n            fontSize={12}\n            tickLine={false}\n            axisLine={false}\n          />\n          <YAxis\n            stroke={chartConfig.axis}\n            fontSize={12}\n            tickLine={false}\n            axisLine={false}\n            tickFormatter={(value: number) => `$${value}`}\n          />\n          <Tooltip content={<ChartTooltip />} />\n          <Line\n            dataKey=\"actual\"\n            stroke=\"var(--cbre-green)\"\n            strokeWidth={2}\n            dot={true}\n          />\n          <Line\n            dataKey=\"target\"\n            stroke=\"var(--accent-green)\"\n            strokeWidth={2}\n            dot={true}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\n// Pie Chart Component\nexport function CBRESimplePieChart({\n  data,\n  className,\n}: {\n  data: ChartData[];\n  className?: string;\n}) {\n  return (\n    <div className={cn(\"w-full\", className)}>\n      <ResponsiveContainer width=\"100%\" height={350}>\n        <PieChart>\n          <Pie\n            data={data}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            outerRadius={120}\n            dataKey=\"value\"\n            label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n          >\n            {data.map((_, index) => (\n              <Cell\n                key={`cell-${index}`}\n                fill={chartConfig.colors[index % chartConfig.colors.length]}\n              />\n            ))}\n          </Pie>\n          <Tooltip content={<ChartTooltip />} />\n        </PieChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\n// Horizontal Bar Chart Component\nexport function CBREHorizontalBarChart({\n  data,\n  className,\n}: {\n  data: Array<{\n    name: string;\n    actual: number;\n    target: number;\n  }>;\n  className?: string;\n}) {\n  return (\n    <div className={cn(\"w-full\", className)}>\n      <ResponsiveContainer width=\"100%\" height={350}>\n        <BarChart\n          layout=\"vertical\"\n          data={data}\n          margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n        >\n          <CartesianGrid\n            strokeDasharray=\"3 3\"\n            stroke={chartConfig.grid}\n            horizontal={false}\n          />\n          <XAxis\n            type=\"number\"\n            stroke={chartConfig.axis}\n            fontSize={12}\n            tickLine={false}\n            axisLine={false}\n            tickFormatter={(value: number) => `$${value}`}\n          />\n          <YAxis\n            type=\"category\"\n            dataKey=\"name\"\n            stroke={chartConfig.axis}\n            fontSize={12}\n            tickLine={false}\n            axisLine={false}\n          />\n          <Tooltip content={<ChartTooltip />} />\n          <Bar dataKey=\"actual\" fill=\"var(--celadon)\" radius={[0, 0, 0, 0]} />\n          <Bar dataKey=\"target\" fill=\"var(--wheat)\" radius={[0, 0, 0, 0]} />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n} "]}