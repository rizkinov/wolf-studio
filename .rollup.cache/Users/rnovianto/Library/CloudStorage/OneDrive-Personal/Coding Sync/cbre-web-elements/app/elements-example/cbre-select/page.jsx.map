{"version":3,"file":"page.jsx","sourceRoot":"","sources":["page.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  CBRESelect,\n  CBREGroupedSelect,\n  SelectGroupItem\n} from \"@/components/cbre-select\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport Link from \"next/link\";\nimport { CBREButton } from \"@/components/cbre-button\";\n\nexport default function CBRESelectExamplePage() {\n  // Basic select example state\n  const [fruitValue, setFruitValue] = React.useState(\"\");\n  \n  // Error select example state\n  const [priorityValue, setPriorityValue] = React.useState(\"\");\n  \n  // Form with multiple inputs state\n  const [formData, setFormData] = React.useState({\n    country: \"\",\n    city: \"\"\n  });\n  \n  // Handle select value changes for form\n  const handleSelectChange = (name: string, value: string) => {\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Handle form submit\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log(\"Form submitted with data:\", formData);\n  };\n  \n  // Define city options based on country selection\n  const getCityOptions = () => {\n    switch (formData.country) {\n      case \"usa\":\n        return [\n          { label: \"New York\", value: \"ny\" },\n          { label: \"Los Angeles\", value: \"la\" },\n          { label: \"Chicago\", value: \"chi\" },\n        ];\n      case \"uk\":\n        return [\n          { label: \"London\", value: \"ldn\" },\n          { label: \"Manchester\", value: \"man\" },\n          { label: \"Liverpool\", value: \"liv\" },\n        ];\n      case \"fr\":\n        return [\n          { label: \"Paris\", value: \"par\" },\n          { label: \"Lyon\", value: \"lyo\" },\n          { label: \"Marseille\", value: \"mar\" },\n        ];\n      default:\n        return [];\n    }\n  };\n  \n  // Define region groups for the grouped select\n  const regionGroups: SelectGroupItem[] = [\n    {\n      label: \"West Coast\",\n      options: [\n        { label: \"California\", value: \"ca\" },\n        { label: \"Washington\", value: \"wa\" },\n        { label: \"Oregon\", value: \"or\" },\n      ]\n    },\n    {\n      label: \"East Coast\",\n      options: [\n        { label: \"New York\", value: \"ny\" },\n        { label: \"Florida\", value: \"fl\" },\n        { label: \"Massachusetts\", value: \"ma\" },\n      ]\n    },\n    {\n      label: \"Midwest\",\n      options: [\n        { label: \"Illinois\", value: \"il\" },\n        { label: \"Michigan\", value: \"mi\" },\n        { label: \"Ohio\", value: \"oh\" },\n      ]\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <div className=\"py-10 px-4 md:px-10 max-w-5xl mx-auto\">\n        <div className=\"mb-8\">\n          <Link href=\"/elements-example\">\n            <CBREButton variant=\"outline\">Back to UI Elements</CBREButton>\n          </Link>\n        </div>\n\n        <h1 className=\"text-6xl font-financier text-cbre-green mb-6\">CBRE Select Component</h1>\n        <p className=\"text-dark-grey font-calibre mb-10 max-w-3xl\">\n          The CBRESelect component extends the shadcn/ui Select component with CBRE-specific styling and additional features like labels, descriptions, and error handling.\n        </p>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 mb-16\">\n          {/* Basic CBRESelect Example */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-2xl font-financier text-cbre-green\">Basic Select</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <CBRESelect \n                label=\"Favorite Fruit\"\n                description=\"Select your favorite fruit from the options below\"\n                value={fruitValue}\n                onValueChange={setFruitValue}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select a fruit\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"apple\">Apple</SelectItem>\n                  <SelectItem value=\"banana\">Banana</SelectItem>\n                  <SelectItem value=\"orange\">Orange</SelectItem>\n                  <SelectItem value=\"grape\">Grape</SelectItem>\n                  <SelectItem value=\"pineapple\">Pineapple</SelectItem>\n                </SelectContent>\n              </CBRESelect>\n              \n              {fruitValue && (\n                <p className=\"mt-4 text-sm text-dark-grey\">\n                  You selected: <span className=\"font-bold\">{fruitValue}</span>\n                </p>\n              )}\n            </CardContent>\n          </Card>\n          \n          {/* CBRESelect with Error Example */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-2xl font-financier text-cbre-green\">Select with Error</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <CBRESelect \n                label=\"Priority Level\"\n                error={priorityValue ? \"\" : \"Please select a priority level\"}\n                value={priorityValue}\n                onValueChange={setPriorityValue}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select priority\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"low\">Low</SelectItem>\n                  <SelectItem value=\"medium\">Medium</SelectItem>\n                  <SelectItem value=\"high\">High</SelectItem>\n                  <SelectItem value=\"critical\">Critical</SelectItem>\n                </SelectContent>\n              </CBRESelect>\n            </CardContent>\n          </Card>\n        </div>\n        \n        {/* CBREGroupedSelect Example */}\n        <Card className=\"mb-16\">\n          <CardHeader>\n            <CardTitle className=\"text-2xl font-financier text-cbre-green\">Grouped Select</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <CBREGroupedSelect\n              label=\"US Region\"\n              description=\"Select a region in the United States\"\n              groups={regionGroups}\n              placeholder=\"Select a region\"\n            />\n          </CardContent>\n        </Card>\n        \n        {/* Form with Multiple CBRESelects */}\n        <Card className=\"mb-16\">\n          <CardHeader>\n            <CardTitle className=\"text-2xl font-financier text-cbre-green\">Form with Selects</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              <CBRESelect \n                label=\"Country\"\n                value={formData.country}\n                onValueChange={(value) => handleSelectChange(\"country\", value)}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select a country\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"usa\">United States</SelectItem>\n                  <SelectItem value=\"uk\">United Kingdom</SelectItem>\n                  <SelectItem value=\"fr\">France</SelectItem>\n                </SelectContent>\n              </CBRESelect>\n              \n              <CBRESelect \n                label=\"City\"\n                description=\"Select a city in the chosen country\"\n                value={formData.city}\n                onValueChange={(value) => handleSelectChange(\"city\", value)}\n                disabled={!formData.country}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder={\n                    formData.country ? \"Select a city\" : \"Please select a country first\"\n                  } />\n                </SelectTrigger>\n                <SelectContent>\n                  {getCityOptions().map((city) => (\n                    <SelectItem key={city.value} value={city.value}>\n                      {city.label}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </CBRESelect>\n              \n              <div className=\"flex justify-end space-x-4\">\n                <Button \n                  type=\"button\" \n                  variant=\"outline\"\n                  onClick={() => setFormData({ country: \"\", city: \"\" })}\n                >\n                  Reset\n                </Button>\n                <Button type=\"submit\">Submit</Button>\n              </div>\n            </form>\n            \n            {(formData.country || formData.city) && (\n              <div className=\"mt-6 p-4 bg-gray-50 rounded\">\n                <h4 className=\"text-sm font-medium mb-2\">Current Form Data:</h4>\n                <pre className=\"text-xs\">{JSON.stringify(formData, null, 2)}</pre>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Component API */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-4xl font-financier text-cbre-green mb-5\">Component API</h2>\n          <div className=\"bg-[var(--lighter-grey)] p-4 md:p-8\">\n            <div className=\"border border-light-grey bg-white p-8 max-w-2xl mx-auto\">\n              <div className=\"space-y-8\">\n                <div>\n                  <h3 className=\"text-xl font-calibre font-medium mb-3\">Select Components</h3>\n                  <p className=\"mb-3 text-dark-grey font-calibre\">\n                    The Select component provides a consistent UI element following CBRE design guidelines.\n                  </p>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full border-collapse text-sm\">\n                      <thead>\n                        <tr>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Component</th>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Description</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td className=\"border border-light-grey px-4 py-2 font-mono\">Select</td>\n                          <td className=\"border border-light-grey px-4 py-2\">The root component.</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"text-xl font-calibre font-medium mb-3\">Select Props</h3>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full border-collapse text-sm\">\n                      <thead>\n                        <tr>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Prop</th>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Type</th>\n                          <th className=\"border border-light-grey px-4 py-2 text-left\">Description</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td className=\"border border-light-grey px-4 py-2 font-mono\">className</td>\n                          <td className=\"border border-light-grey px-4 py-2\">string</td>\n                          <td className=\"border border-light-grey px-4 py-2\">Additional CSS classes to apply to the component.</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mt-16 flex justify-center\">\n          <Link href=\"/elements-example\">\n            <CBREButton variant=\"outline\">Back to UI Elements</CBREButton>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n} "]}