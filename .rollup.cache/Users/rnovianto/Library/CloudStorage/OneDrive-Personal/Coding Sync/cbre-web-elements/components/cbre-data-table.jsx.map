{"version":3,"file":"cbre-data-table.jsx","sourceRoot":"","sources":["cbre-data-table.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  SortingState,\n  VisibilityState,\n  flexRender,\n  getCoreRowModel,\n  getFacetedRowModel,\n  getFacetedUniqueValues,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from \"@tanstack/react-table\";\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { ChevronDown } from \"lucide-react\";\n\ninterface DataTableProps<TData, TValue> {\n  columns: ColumnDef<TData, TValue>[];\n  data: TData[];\n  searchKey?: string;\n  showColumnVisibility?: boolean;\n  showGlobalFilter?: boolean;\n}\n\nexport function CBREDataTable<TData, TValue>({\n  columns,\n  data,\n  searchKey,\n  showColumnVisibility = true,\n  showGlobalFilter = true,\n}: DataTableProps<TData, TValue>) {\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>([]);\n  const [columnVisibility, setColumnVisibility] = React.useState<VisibilityState>({});\n  const [rowSelection, setRowSelection] = React.useState({});\n\n  const table = useReactTable({\n    data,\n    columns,\n    state: {\n      sorting,\n      columnFilters,\n      columnVisibility,\n      rowSelection,\n    },\n    enableRowSelection: true,\n    onRowSelectionChange: setRowSelection,\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    onColumnVisibilityChange: setColumnVisibility,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFacetedRowModel: getFacetedRowModel(),\n    getFacetedUniqueValues: getFacetedUniqueValues(),\n  });\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Table Controls */}\n      <div className=\"flex items-center justify-between\">\n        {showGlobalFilter && searchKey && (\n          <div className=\"flex items-center py-4\">\n            <Input\n              placeholder=\"Search...\"\n              value={(table.getColumn(searchKey)?.getFilterValue() as string) ?? \"\"}\n              onChange={(event) =>\n                table.getColumn(searchKey)?.setFilterValue(event.target.value)\n              }\n              className=\"max-w-sm\"\n            />\n          </div>\n        )}\n        {showColumnVisibility && (\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"outline\" className=\"ml-auto\">\n                Columns <ChevronDown className=\"ml-2 h-4 w-4\" />\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\">\n              {table\n                .getAllColumns()\n                .filter((column) => column.getCanHide())\n                .map((column) => {\n                  return (\n                    <DropdownMenuCheckboxItem\n                      key={column.id}\n                      className=\"capitalize\"\n                      checked={column.getIsVisible()}\n                      onCheckedChange={(value) => column.toggleVisibility(!!value)}\n                    >\n                      {column.id}\n                    </DropdownMenuCheckboxItem>\n                  );\n                })}\n            </DropdownMenuContent>\n          </DropdownMenu>\n        )}\n      </div>\n\n      {/* Table */}\n      <div className=\"rounded-md border\">\n        <Table>\n          <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <TableHead key={header.id}>\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                          )}\n                    </TableHead>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map((row) => (\n                <TableRow\n                  key={row.id}\n                  data-state={row.getIsSelected() && \"selected\"}\n                >\n                  {row.getVisibleCells().map((cell) => (\n                    <TableCell key={cell.id}>\n                      {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell\n                  colSpan={columns.length}\n                  className=\"h-24 text-center text-muted-foreground\"\n                >\n                  No results.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n\n      {/* Pagination Controls */}\n      <div className=\"flex items-center justify-end space-x-2 py-4\">\n        <div className=\"flex-1 text-sm text-muted-foreground\">\n          {table.getFilteredSelectedRowModel().rows.length} of{\" \"}\n          {table.getFilteredRowModel().rows.length} row(s) selected.\n        </div>\n        <div className=\"space-x-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.previousPage()}\n            disabled={!table.getCanPreviousPage()}\n          >\n            Previous\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.nextPage()}\n            disabled={!table.getCanNextPage()}\n          >\n            Next\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n} "]}