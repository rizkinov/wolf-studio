{"version":3,"file":"cbre-tabs.jsx","sourceRoot":"","sources":["cbre-tabs.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext } from 'react';\nimport { cn } from \"@/lib/utils\";\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from \"@/components/ui/tabs\";\n\n// Create context for CBRE Tabs\ninterface CBRETabsContextProps {\n  variant: \"underline\" | \"boxed\";\n  size: \"sm\" | \"md\" | \"lg\";\n}\n\nconst CBRETabsContext = createContext<CBRETabsContextProps>({\n  variant: \"underline\",\n  size: \"md\"\n});\n\ninterface CBRETabsProps {\n  defaultValue: string;\n  value?: string;\n  onValueChange?: (value: string) => void;\n  className?: string;\n  children?: React.ReactNode;\n  variant?: \"underline\" | \"boxed\";\n  size?: \"sm\" | \"md\" | \"lg\";\n}\n\n/**\n * CBRETabs - A styled tabs component following CBRE design\n * \n * Features:\n * - CBRE styling with cbre-green underline or boxed tabs\n * - Two variants: underline (default) and boxed\n * - Three size options\n */\nexport function CBRETabs({\n  defaultValue,\n  value,\n  onValueChange,\n  className,\n  children,\n  variant = \"underline\",\n  size = \"md\",\n  ...props\n}: CBRETabsProps) {\n  return (\n    <CBRETabsContext.Provider value={{ variant, size }}>\n      <Tabs \n        defaultValue={defaultValue}\n        value={value}\n        onValueChange={onValueChange}\n        className={cn(\n          \"w-full\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </Tabs>\n    </CBRETabsContext.Provider>\n  );\n}\n\ninterface CBRETabsListProps {\n  className?: string;\n  children?: React.ReactNode;\n  variant?: \"underline\" | \"boxed\";\n  size?: \"sm\" | \"md\" | \"lg\";\n}\n\nexport function CBRETabsList({\n  className,\n  children,\n  variant: propVariant,\n  size: propSize,\n  ...props\n}: CBRETabsListProps) {\n  // Get context values, with prop values taking precedence\n  const context = useContext(CBRETabsContext);\n  const variant = propVariant || context.variant;\n  const size = propSize || context.size;\n\n  // Size classes\n  const sizeClasses = {\n    sm: \"h-9 gap-2\",\n    md: \"h-10 gap-3\",\n    lg: \"h-12 gap-4\",\n  };\n\n  // Variant classes\n  const variantClasses = {\n    underline: \"border-b border-light-grey\",\n    boxed: \"rounded-none\",\n  };\n\n  return (\n    <TabsList \n      data-variant={variant}\n      className={cn(\n        \"w-full flex justify-start p-0 rounded-none relative\",\n        sizeClasses[size],\n        variantClasses[variant],\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </TabsList>\n  );\n}\n\ninterface CBRETabsTriggerProps {\n  value: string;\n  className?: string;\n  children?: React.ReactNode;\n  variant?: \"underline\" | \"boxed\";\n  size?: \"sm\" | \"md\" | \"lg\";\n  disabled?: boolean;\n}\n\nexport function CBRETabsTrigger({\n  value,\n  className,\n  children,\n  variant: propVariant,\n  size: propSize,\n  disabled,\n  ...props\n}: CBRETabsTriggerProps) {\n  // Get context values, with prop values taking precedence\n  const context = useContext(CBRETabsContext);\n  const variant = propVariant || context.variant;\n  const size = propSize || context.size;\n\n  // Size classes\n  const sizeClasses = {\n    sm: \"px-2 py-1 text-sm\",\n    md: \"px-3 py-2 text-base\",\n    lg: \"px-4 py-2 text-lg\",\n  };\n\n  // Variant styles for tabs - simplified to avoid conflicts with our global CSS\n  const variantClasses = {\n    underline: cn(\n      \"font-calibre font-medium\",\n      \"data-[state=inactive]:text-dark-grey\",\n      \"rounded-none hover:text-cbre-green\"\n    ),\n    boxed: cn(\n      \"font-calibre font-medium\",\n      \"data-[state=inactive]:text-dark-grey\",\n      \"rounded-none hover:text-cbre-green\"\n    ),\n  };\n\n  return (\n    <TabsTrigger\n      value={value}\n      disabled={disabled}\n      data-variant={variant}\n      className={cn(\n        // Base styles\n        \"transition-all focus-visible:outline-none focus-visible:ring-2\",\n        \"focus-visible:ring-accent-green focus-visible:ring-offset-2\",\n        \"data-[disabled]:opacity-50 data-[disabled]:cursor-not-allowed\",\n        \n        // Apply size and variant specific styles\n        sizeClasses[size],\n        variantClasses[variant],\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </TabsTrigger>\n  );\n}\n\ninterface CBRETabsContentProps {\n  value: string;\n  className?: string;\n  children?: React.ReactNode;\n}\n\nexport function CBRETabsContent({\n  value,\n  className,\n  children,\n  ...props\n}: CBRETabsContentProps) {\n  return (\n    <TabsContent\n      value={value}\n      className={cn(\n        \"mt-6 focus-visible:outline-none focus-visible:ring-2\",\n        \"focus-visible:ring-accent-green focus-visible:ring-offset-2\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </TabsContent>\n  );\n}\n\n// Re-export with aliases for convenience\nexport {\n  CBRETabs as Tabs,\n  CBRETabsList as TabsList,\n  CBRETabsTrigger as TabsTrigger,\n  CBRETabsContent as TabsContent,\n}; "]}